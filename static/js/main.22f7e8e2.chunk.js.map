{"version":3,"sources":["perlin.ts","smoothstep.tsx","AdversaryPointCloud.tsx","glsl.tsx","GradientEffect.tsx","OrbitControls.js","AdversaryDriver.tsx","AdversaryRendering.tsx","ImageDropzone.tsx","App.tsx","PixelBleed.tsx","AppPixelBleed.tsx","reportWebVitals.ts","index.tsx"],"names":["Grad","x","y","z","this","grad3","p","perm","Array","gradP","seed","Math","floor","i","v","sqrt","fade","t","lerp","a","b","perlin2","X","Y","n00","dot2","n01","n10","n11","u","smoothstep","edge0","edge1","MathUtils","clamp","AdversaryPointCloud","source","geometry","Geometry","imageData","downsampledImageData","image","width","height","ix","iy","mapLinear","imageDataIndex","r","data","g","vertices","push","Vector3","colors","Color","scale","max","console","log","newPCGeometry","sprite","TextureLoader","load","onUpdate","material","needsUpdate","PointsMaterial","vertexColors","map","transparent","alphaTest","sizeAttenuation","size","newPCMaterial","geom","originalPositions","originalColors","mat","clone","time","performance","now","mode","length","animateHeightmap","STATE","particleDistortion","animateCircleMessy","animateNoiseflow","animateSphere","vertex","color","targetPosition","targetColor","colorsNeedUpdate","verticesNeedUpdate","oPos","atan2","radius","set","originalPosition","dx","dy","dz","setRGB","angle","cos","sin","originalColor","Points","glsl","literals","result","GradientEffect","state","maxBrightness","minBrightness","target","fsQuad","WebGLRenderTarget","GradientShaderMaterial","Pass","FullScreenQuad","texture","renderer","setRenderTarget","render","uniforms","tSource","value","gradient","fill","gradientLength","transparency","enabled","vertexShader","fragmentShader","update","gradientColors","split","forEach","index","gradientTransparency","gradientEnabled","ShaderMaterial","OrbitControls","object","domElement","undefined","warn","document","error","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","getState","loadState","updateProjectionMatrix","dispatchEvent","changeEvent","reset","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","isFinite","makeSafe","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","rotateUp","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","prototype","Object","create","EventDispatcher","constructor","MapControls","call","DRIVER","AdversaryDriver","canvas","scene","camera","controls","adversary","adversaryMaterial","timeStarted","PlaneGeometry","textureBase","gradientEffect","pointCloud","composer","filmPass","mouse","spherical0","handleMouseMove","aspect","innerWidth","innerHeight","parallaxEnabled","parallaxRespondsToMouseMovement","parallaxAmount","parallaxIntensity","movementX","movementY","cameraTarget","handleWindowResize","setSize","halfHeight","animate","requestAnimationFrame","updateCameraTarget","updateCameraParallax","zScale","growLength","displacementScale","WebGLRenderer","setPixelRatio","devicePixelRatio","Scene","OrthographicCamera","AmbientLight","background","loadDefaultImage","EffectComposer","addPass","RenderPass","FilmPass","setState","img","Texture","onload","recreateAdversary","nIntensity","noiseIntensity","sIntensity","scanlineIntensity","parent","remove","applyEuler","Euler","createDisplacementMap","displacementMap","MeshStandardMaterial","side","DoubleSide","roughness","metalness","Mesh","distanceTo","damping","parallaxReturnSpeed","brightness","CanvasTexture","createElement","context","getContext","drawImage","getImageData","computeFlatVertexNormals","AdversaryRendering","driver","useRef","handleRef","React","useCallback","current","useEffect","setImage","ref","ImageDropzone","onGotImage","onDrop","files","rejected","file","reader","FileReader","onabort","onerror","src","readAsDataURL","useDropzone","maxFiles","getRootProps","getInputProps","isDragActive","className","App","useState","showUI","setShowUI","assign","handleKeyup","code","show","handleCameraFrontalView","goFrontalView","handleCameraDiagonalView","goDiagonalView","path","label","options","step","closed","title","onClick","PixelBleed","imgTexture","textureA","textureB","bufferMaterial","finalMaterial","bufferObject","bufferScene","quad","renderB","onDocumentMouseMove","minFilter","LinearFilter","magFilter","NearestFilter","feedback","resolution","random","plane","PlaneBufferGeometry","MeshBasicMaterial","clear","noise","AppPixelBleed","style","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.22f7e8e2.chunk.js","sourcesContent":["/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\nexport class Grad {\n  constructor (public x: number, public y: number, public z: number) {}\n\n  dot2(x: number, y: number) {\n    return this.x*x + this.y*y;\n  };\n\n  dot3(x: number, y: number, z: number) {\n    return this.x*x + this.y*y + this.z*z;\n  };\n}\n\nconst grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n              new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n              new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n\nvar p = [151,160,137,91,90,15,\n131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n// To remove the need for index wrapping, double the permutation table length\nvar perm = new Array(512);\nvar gradP = new Array(512);\n\n// This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\nexport function seed(seed: number) {\n\n  if(seed > 0 && seed < 1) {\n    // Scale the seed out\n    seed *= 65536;\n  }\n\n  seed = Math.floor(seed);\n  if(seed < 256) {\n    seed |= seed << 8;\n  }\n\n  for(var i = 0; i < 256; i++) {\n    var v;\n    if (i & 1) {\n      v = p[i] ^ (seed & 255);\n    } else {\n      v = p[i] ^ ((seed>>8) & 255);\n    }\n\n    perm[i] = perm[i + 256] = v;\n    gradP[i] = gradP[i + 256] = grad3[v % 12];\n  }\n};\n\nseed(0);\n\n/*\nfor(var i=0; i<256; i++) {\n  perm[i] = perm[i + 256] = p[i];\n  gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n}*/\n\n// Skewing and unskewing factors for 2, 3, and 4 dimensions\nvar F2 = 0.5*(Math.sqrt(3)-1);\nvar G2 = (3-Math.sqrt(3))/6;\n\nvar F3 = 1/3;\nvar G3 = 1/6;\n\n// 2D simplex noise\nexport function simplex2(xin: number, yin: number) {\n  var n0, n1, n2; // Noise contributions from the three corners\n  // Skew the input space to determine which simplex cell we're in\n  var s = (xin+yin)*F2; // Hairy factor for 2D\n  var i = Math.floor(xin+s);\n  var j = Math.floor(yin+s);\n  var t = (i+j)*G2;\n  var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n  var y0 = yin-j+t;\n  // For the 2D case, the simplex shape is an equilateral triangle.\n  // Determine which simplex we are in.\n  var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n  if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n    i1=1; j1=0;\n  } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n    i1=0; j1=1;\n  }\n  // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n  // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n  // c = (3-sqrt(3))/6\n  var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n  var y1 = y0 - j1 + G2;\n  var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n  var y2 = y0 - 1 + 2 * G2;\n  // Work out the hashed gradient indices of the three simplex corners\n  i &= 255;\n  j &= 255;\n  var gi0 = gradP[i+perm[j]];\n  var gi1 = gradP[i+i1+perm[j+j1]];\n  var gi2 = gradP[i+1+perm[j+1]];\n  // Calculate the contribution from the three corners\n  var t0 = 0.5 - x0*x0-y0*y0;\n  if(t0<0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n  }\n  var t1 = 0.5 - x1*x1-y1*y1;\n  if(t1<0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot2(x1, y1);\n  }\n  var t2 = 0.5 - x2*x2-y2*y2;\n  if(t2<0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot2(x2, y2);\n  }\n  // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n  return 70 * (n0 + n1 + n2);\n};\n\n// 3D simplex noise\nexport function simplex3(xin: number, yin: number, zin: number) {\n  var n0, n1, n2, n3; // Noise contributions from the four corners\n\n  // Skew the input space to determine which simplex cell we're in\n  var s = (xin+yin+zin)*F3; // Hairy factor for 2D\n  var i = Math.floor(xin+s);\n  var j = Math.floor(yin+s);\n  var k = Math.floor(zin+s);\n\n  var t = (i+j+k)*G3;\n  var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n  var y0 = yin-j+t;\n  var z0 = zin-k+t;\n\n  // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n  // Determine which simplex we are in.\n  var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n  var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n  if(x0 >= y0) {\n    if(y0 >= z0)      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; }\n    else if(x0 >= z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; }\n    else              { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }\n  } else {\n    if(y0 < z0)      { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; }\n    else if(x0 < z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; }\n    else             { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; }\n  }\n  // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n  // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n  // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n  // c = 1/6.\n  var x1 = x0 - i1 + G3; // Offsets for second corner\n  var y1 = y0 - j1 + G3;\n  var z1 = z0 - k1 + G3;\n\n  var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n  var y2 = y0 - j2 + 2 * G3;\n  var z2 = z0 - k2 + 2 * G3;\n\n  var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n  var y3 = y0 - 1 + 3 * G3;\n  var z3 = z0 - 1 + 3 * G3;\n\n  // Work out the hashed gradient indices of the four simplex corners\n  i &= 255;\n  j &= 255;\n  k &= 255;\n  var gi0 = gradP[i+   perm[j+   perm[k   ]]];\n  var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];\n  var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];\n  var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];\n\n  // Calculate the contribution from the four corners\n  var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0;\n  if(t0<0) {\n    n0 = 0;\n  } else {\n    t0 *= t0;\n    n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\n  }\n  var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1;\n  if(t1<0) {\n    n1 = 0;\n  } else {\n    t1 *= t1;\n    n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n  }\n  var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2;\n  if(t2<0) {\n    n2 = 0;\n  } else {\n    t2 *= t2;\n    n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n  }\n  var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3;\n  if(t3<0) {\n    n3 = 0;\n  } else {\n    t3 *= t3;\n    n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n  }\n  // Add contributions from each corner to get the final noise value.\n  // The result is scaled to return values in the interval [-1,1].\n  return 32 * (n0 + n1 + n2 + n3);\n\n};\n\n// ##### Perlin noise stuff\n\nfunction fade(t: number) {\n  return t*t*t*(t*(t*6-15)+10);\n}\n\nfunction lerp(a: number, b: number, t: number) {\n  return (1-t)*a + t*b;\n}\n\n// 2D Perlin Noise\nexport function perlin2(x: number, y: number) {\n  // Find unit grid cell containing point\n  var X = Math.floor(x), Y = Math.floor(y);\n  // Get relative xy coordinates of point within that cell\n  x = x - X; y = y - Y;\n  // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n  X = X & 255; Y = Y & 255;\n\n  // Calculate noise contributions from each of the four corners\n  var n00 = gradP[X+perm[Y]].dot2(x, y);\n  var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);\n  var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);\n  var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);\n\n  // Compute the fade curve value for x\n  var u = fade(x);\n\n  // Interpolate the four results\n  return lerp(\n      lerp(n00, n10, u),\n      lerp(n01, n11, u),\n      fade(y));\n};\n\n// 3D Perlin Noise\nexport function perlin3(x: number, y: number, z: number) {\n  // Find unit grid cell containing point\n  var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n  // Get relative xyz coordinates of point within that cell\n  x = x - X; y = y - Y; z = z - Z;\n  // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n  X = X & 255; Y = Y & 255; Z = Z & 255;\n\n  // Calculate noise contributions from each of the eight corners\n  var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);\n  var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);\n  var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);\n  var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);\n  var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);\n  var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);\n  var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);\n  var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);\n\n  // Compute the fade curve value for x, y, z\n  var u = fade(x);\n  var v = fade(y);\n  var w = fade(z);\n\n  // Interpolate\n  return lerp(\n      lerp(\n        lerp(n000, n100, u),\n        lerp(n001, n101, u), w),\n      lerp(\n        lerp(n010, n110, u),\n        lerp(n011, n111, u), w),\n      v);\n};\n","import { MathUtils } from \"three\";\r\n\r\n\r\nexport function smoothstep(edge0: number, edge1: number, x: number) {\r\n  // Scale, bias and saturate x to 0..1 range\r\n  x = MathUtils.clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\r\n  // Evaluate polynomial\r\n  return x * x * (3 - 2 * x);\r\n}\r\n","import {\r\n  Color,\r\n  Geometry,\r\n  MathUtils,\r\n  Points,\r\n  PointsMaterial,\r\n  Texture,\r\n  TextureLoader,\r\n  Vector3\r\n} from \"three\";\r\nimport { downsampledImageData } from \"./AdversaryDriver\";\r\nimport { STATE } from \"./App\";\r\nimport { perlin2 } from \"./perlin\";\r\nimport { smoothstep } from \"./smoothstep\";\r\n\r\nexport class AdversaryPointCloud extends Points {\r\n  private geom: Geometry;\r\n  private originalPositions: Vector3[];\r\n  private originalColors: Color[];\r\n  mat: PointsMaterial;\r\n  constructor(public source: Texture) {\r\n    super(newPCGeometry(source), newPCMaterial());\r\n    this.geom = this.geometry as Geometry;\r\n    this.mat = this.material as PointsMaterial;\r\n    this.originalPositions = this.geom.vertices.map((x) => x.clone());\r\n    this.originalColors = this.geom.colors.map((x) => x.clone());\r\n  }\r\n\r\n  public animate() {\r\n    const time = performance.now() / 1000;\r\n    const mode = time % 10 < 5 ? \"mainnav\" : \"heightmap\";\r\n\r\n    for (let i = 0; i < this.geom.vertices.length; i++) {\r\n      if (mode === \"heightmap\") {\r\n        this.animateHeightmap(i, time);\r\n      } else {\r\n        switch (STATE.particleDistortion) {\r\n          case \"messycircle\":\r\n            this.animateCircleMessy(i, time);\r\n            break;\r\n          case \"noiseflow\":\r\n            this.animateNoiseflow(i, time);\r\n            break;\r\n          case \"sphere\":\r\n            this.animateSphere(i, time);\r\n            break;\r\n        }\r\n      }\r\n      const vertex = this.geom.vertices[i];\r\n      const color = this.geom.colors[i];\r\n      vertex.lerp(targetPosition, 0.2);\r\n      color.lerp(targetColor, 0.15);\r\n    }\r\n    this.geom.colorsNeedUpdate = true;\r\n    this.geom.verticesNeedUpdate = true;\r\n  }\r\n\r\n  animateSphere(i: number, time: number) {\r\n    const vertex = this.geom.vertices[i];\r\n    const color = this.geom.colors[i];\r\n    const oPos = this.originalPositions[i];\r\n    const originalColor = this.originalColors[i];\r\n\r\n    const {x, y} = oPos;\r\n    const radius = 100;\r\n\r\n    // 0 to two-pi\r\n    const polar = Math.atan2(y, x);\r\n    // const polarLinesIndexFractional = ((polar + Math.PI) % (Math.PI * 2) / Math.PI * 2) * 8;\r\n    // const targetIndex = Math.floor(polarLinesIndexFractional);\r\n    // const targetIndexLerp = polarLinesIndexFractional - targetIndex;\r\n    // const closestPolarLine = targetIndex * Math.PI * 2;\r\n    // const targetX = Math.cos(closestPolarLine) * radius;\r\n    // const newX = MathUtils.lerp(x, targetX, smoothstep(0, 1, targetIndexLerp));\r\n    // const azimuth = Math.acos(z / radius)\r\n\r\n    // radius = sqrt(x*x + y*y + z*z)\r\n    // sqrt(r^2 - x*x - y*y) = z\r\n    // always positive\r\n    let z = Math.sqrt(radius * radius - x*x - y*y);\r\n    // z += perlin3(x / 50, y / 50, time * 0.5) * 30 - 15;\r\n    // z *= Math.sin(polar * 293912031232.31) < 0 ? -1 : 1;\r\n\r\n    targetPosition.set(\r\n      x,\r\n      y,\r\n      z\r\n    );\r\n  }\r\n\r\n  animateNoiseflow(i: number, time: number) {\r\n    const vertex = this.geom.vertices[i];\r\n    const color = this.geom.colors[i];\r\n    const originalPosition = this.originalPositions[i];\r\n    const originalColor = this.originalColors[i];\r\n    // circle experiment\r\n    const dx = perlin2(\r\n      originalPosition.x / 20,\r\n      originalPosition.y / 20 + time * 0.5 - 4.213\r\n    );\r\n    const dy = perlin2(\r\n      originalPosition.x / 20 + 1000,\r\n      originalPosition.y / 20 + time * 0.5 + 26.586\r\n    );\r\n    const dz = perlin2(\r\n      originalPosition.x / 20 + 9903,\r\n      originalPosition.y / 20 - 200 + time * 0.5 + 90.492\r\n    );\r\n    targetPosition.set(\r\n      originalPosition.x + dx * 50,\r\n      originalPosition.y + dy * 50,\r\n      dz * 50\r\n    );\r\n    targetColor.setRGB(0.92, 0.91, 0.93);\r\n  }\r\n  private animateCircleMessy(i: number, time: number) {\r\n    const vertex = this.geom.vertices[i];\r\n    const color = this.geom.colors[i];\r\n    const originalPosition = this.originalPositions[i];\r\n    const originalColor = this.originalColors[i];\r\n    // const angle = MathUtils.mapLinear(i, 0, this.geom.vertices.length, 0, Math.PI * 2);\r\n    const angle = Math.atan2(\r\n      this.originalPositions[i].y,\r\n      this.originalPositions[i].x\r\n    );\r\n    targetPosition.set(\r\n      Math.cos(angle) * 80 + perlin2(i / 10, time) * 6 - 3,\r\n      Math.sin(angle) * 80 + perlin2(i / 10 + 1.953, time + 399) * 6 - 3,\r\n      this.originalPositions[i].z +\r\n        6 *\r\n          Math.sin(\r\n            angle * 8 + time * 2.5\r\n          )\r\n    );\r\n  }\r\n\r\n  private animateHeightmap(i: number, time: number) {\r\n    const vertex = this.geom.vertices[i];\r\n    const color = this.geom.colors[i];\r\n    const originalPosition = this.originalPositions[i];\r\n    const originalColor = this.originalColors[i];\r\n    targetPosition.set(\r\n      originalPosition.x,\r\n      originalPosition.y,\r\n      originalPosition.z +\r\n        1 * Math.sin(vertex.x / 4 + vertex.y / 7 + time * 0.5)\r\n    );\r\n    targetColor.set(originalColor);\r\n  }\r\n}\r\n\r\nfunction newPCMaterial() {\r\n  const sprite = new TextureLoader().load(\r\n    \"/2005-crowdstrike-adversary/textures/disc.png\"\r\n  );\r\n  sprite.onUpdate = () => (material.needsUpdate = true);\r\n\r\n  const material = new PointsMaterial({\r\n    vertexColors: true,\r\n    map: sprite,\r\n    transparent: true,\r\n    alphaTest: 0.2,\r\n    // opacity: 0.75,\r\n    sizeAttenuation: true,\r\n    size: 6,\r\n  });\r\n  return material;\r\n}\r\n\r\nfunction newPCGeometry(source: Texture) {\r\n  const geometry = new Geometry();\r\n\r\n  const { imageData } = downsampledImageData(\r\n    source.image as HTMLImageElement,\r\n    128\r\n  );\r\n\r\n  const { width, height } = imageData;\r\n  for (let ix = 0; ix < width; ix++) {\r\n    for (let iy = 0; iy < height; iy++) {\r\n      const x = MathUtils.mapLinear(ix + 0.5, 0, width, -width / 2, width / 2);\r\n      /// invert the y!\r\n      const y = MathUtils.mapLinear(\r\n        iy + 0.5,\r\n        0,\r\n        height,\r\n        height / 2,\r\n        -height / 2\r\n      );\r\n      const imageDataIndex = (ix + width * iy) * 4;\r\n      const r = imageData.data[imageDataIndex] / 255,\r\n        g = imageData.data[imageDataIndex + 1] / 255,\r\n        b = imageData.data[imageDataIndex + 2] / 255;\r\n      const brightness = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n      const z = brightness * 50;\r\n      geometry.vertices.push(new Vector3(x, y, z));\r\n      geometry.colors.push(new Color(r, g, b));\r\n    }\r\n  }\r\n  const scale = 200 / Math.max(width, height);\r\n  geometry.scale(scale, scale, 1);\r\n  console.log(geometry);\r\n  return geometry;\r\n}\r\n\r\nconst targetPosition = new Vector3();\r\nconst targetColor = new Color();\r\n\r\nfunction lerpTowardsGrid(x: number, grid: number) {\r\n  const closest = Math.floor(x / grid) * grid;\r\n  const lerp = (x - closest) / grid;\r\n  return MathUtils.lerp(x, closest, smoothstep(0, 1, lerp));\r\n}","export function glsl(literals: TemplateStringsArray, ...placeholders: string[]) {\r\n  let result = \"\";\r\n  for (let i = 0; i < placeholders.length; i++) {\r\n    result += literals[i];\r\n    result += placeholders[i];\r\n  }\r\n\r\n  result += literals[literals.length - 1];\r\n  return result;\r\n}\r\n","import {\r\n  Color,\r\n\r\n  ShaderMaterial,\r\n  Texture,\r\n  WebGLRenderer,\r\n  WebGLRenderTarget\r\n} from \"three\";\r\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass\";\r\nimport { GUIState } from \"./App\";\r\nimport { glsl } from \"./glsl\";\r\n\r\nexport class GradientEffect {\r\n  public get texture() {\r\n    return this.target.texture;\r\n  }\r\n\r\n  target: WebGLRenderTarget;\r\n  private fsQuad: Pass.FullScreenQuad;\r\n  public readonly material: GradientShaderMaterial;\r\n\r\n  constructor(public source: Texture, state: GUIState, public maxBrightness: number, public minBrightness: number) {\r\n    this.target = new WebGLRenderTarget(\r\n      source.image.width,\r\n      source.image.height\r\n    );\r\n    this.material = new GradientShaderMaterial(source, state, maxBrightness, minBrightness);\r\n    this.fsQuad = new Pass.FullScreenQuad(this.material);\r\n  }\r\n\r\n  public render(renderer: WebGLRenderer) {\r\n    renderer.setRenderTarget(this.target);\r\n    this.fsQuad.render(renderer);\r\n    renderer.setRenderTarget(null);\r\n  }\r\n}\r\n\r\nclass GradientShaderMaterial extends ShaderMaterial {\r\n  constructor(source: Texture, state: GUIState, maxBrightness: number, minBrightness: number) {\r\n    super({\r\n      uniforms: {\r\n        tSource: { value: source },\r\n        gradient: { value: (new Array(10).fill(0).map(() => new Color())) },\r\n        gradientLength: { value: 0 },\r\n        transparency: { value: true },\r\n        enabled: { value: true },\r\n        maxBrightness: { value: maxBrightness },\r\n        minBrightness: { value: minBrightness },\r\n      },\r\n      vertexShader: vertexShader,\r\n      fragmentShader: fragmentShader,\r\n      transparent: true,\r\n    });\r\n    this.update(state);\r\n    this.needsUpdate = true;\r\n  }\r\n\r\n  update(state: GUIState) {\r\n    const gradientColors = state.gradient.split(\" \").map((x) => new Color(x));\r\n    const gradientLength = gradientColors.length;\r\n    gradientColors.forEach((color, index) => {\r\n      this.uniforms.gradient.value[index] = color;\r\n    });\r\n    this.uniforms.gradientLength.value = gradientLength;\r\n    this.uniforms.transparency.value = state.gradientTransparency;\r\n    this.uniforms.enabled.value = state.gradientEnabled;\r\n    this.needsUpdate = true;\r\n  }\r\n}\r\n\r\nconst vertexShader = glsl`\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n`;\r\nconst fragmentShader = glsl`\r\nuniform sampler2D tSource;\r\nuniform vec3[10] gradient;\r\nuniform int gradientLength;\r\nuniform bool transparency;\r\nuniform bool enabled;\r\nuniform float maxBrightness;\r\nuniform float minBrightness;\r\n\r\nvarying vec2 vUv;\r\n\r\nvec4 getGradientColor(float t) {\r\n  float tOnGradient = t * float(gradientLength);\r\n  int lowStop = int(tOnGradient);\r\n  int highStop = int(tOnGradient) + 1;\r\n  float lerpAmount = tOnGradient - float(lowStop);\r\n\r\n  vec3 colorLow = gradient[lowStop];\r\n  vec3 colorHigh = gradient[highStop];\r\n\r\n  float alpha = 1.0;\r\n  if (transparency && lowStop == 0) {\r\n    alpha = lerpAmount;\r\n  }\r\n\r\n  return vec4(mix(colorLow, colorHigh, lerpAmount), alpha);\r\n}\r\n\r\nvoid main() {\r\n  vec4 baseColor = texture2D( tSource, vUv );\r\n\r\n  if (enabled) {\r\n    float brightness = dot(baseColor.rgb, vec3(0.299, 0.587, 0.114));\r\n    float normalizedBrightness = smoothstep(minBrightness, maxBrightness, brightness);\r\n\r\n    vec4 outColor = getGradientColor(normalizedBrightness);\r\n\r\n    gl_FragColor = outColor;\r\n  } else {\r\n    gl_FragColor = baseColor;\r\n  }\r\n}\r\n`;\r\n","import {\r\n\tEventDispatcher,\r\n\tMOUSE,\r\n\tQuaternion,\r\n\tSpherical,\r\n\tTOUCH,\r\n\tVector2,\r\n\tVector3\r\n} from \"three\";\r\n\r\n// This set of controls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n//\r\n//    Orbit - left mouse / touch: one-finger move\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\r\n\r\nvar OrbitControls = function ( object, domElement ) {\r\n\r\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\r\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\r\n\r\n\tthis.object = object;\r\n\tthis.domElement = domElement;\r\n\r\n\t// Set to false to disable this control\r\n\tthis.enabled = true;\r\n\r\n\t// \"target\" sets the location of focus, where the object orbits around\r\n\tthis.target = new Vector3();\r\n\r\n\t// How far you can dolly in and out ( PerspectiveCamera only )\r\n\tthis.minDistance = 0;\r\n\tthis.maxDistance = Infinity;\r\n\r\n\t// How far you can zoom in and out ( OrthographicCamera only )\r\n\tthis.minZoom = 0;\r\n\tthis.maxZoom = Infinity;\r\n\r\n\t// How far you can orbit vertically, upper and lower limits.\r\n\t// Range is 0 to Math.PI radians.\r\n\tthis.minPolarAngle = 0; // radians\r\n\tthis.maxPolarAngle = Math.PI; // radians\r\n\r\n\t// How far you can orbit horizontally, upper and lower limits.\r\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\r\n\tthis.minAzimuthAngle = - Infinity; // radians\r\n\tthis.maxAzimuthAngle = Infinity; // radians\r\n\r\n\t// Set to true to enable damping (inertia)\r\n\t// If damping is enabled, you must call controls.update() in your animation loop\r\n\tthis.enableDamping = false;\r\n\tthis.dampingFactor = 0.05;\r\n\r\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n\t// Set to false to disable zooming\r\n\tthis.enableZoom = true;\r\n\tthis.zoomSpeed = 1.0;\r\n\r\n\t// Set to false to disable rotating\r\n\tthis.enableRotate = true;\r\n\tthis.rotateSpeed = 1.0;\r\n\r\n\t// Set to false to disable panning\r\n\tthis.enablePan = true;\r\n\tthis.panSpeed = 1.0;\r\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\r\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\r\n\r\n\t// Set to true to automatically rotate around the target\r\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n\tthis.autoRotate = false;\r\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\r\n\r\n\t// Set to false to disable use of the keys\r\n\tthis.enableKeys = true;\r\n\r\n\t// The four arrow keys\r\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\r\n\r\n\t// Mouse buttons\r\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\r\n\r\n\t// Touch fingers\r\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\r\n\r\n\t// for reset\r\n\tthis.target0 = this.target.clone();\r\n\tthis.position0 = this.object.position.clone();\r\n\tthis.zoom0 = this.object.zoom;\r\n\r\n\t//\r\n\t// public methods\r\n\t//\r\n\r\n\tthis.getPolarAngle = function () {\r\n\r\n\t\treturn spherical.phi;\r\n\r\n\t};\r\n\r\n\tthis.getAzimuthalAngle = function () {\r\n\r\n\t\treturn spherical.theta;\r\n\r\n\t};\r\n\r\n\tthis.saveState = function () {\r\n\r\n\t\tscope.target0.copy( scope.target );\r\n\t\tscope.position0.copy( scope.object.position );\r\n\t\tscope.zoom0 = scope.object.zoom;\r\n\t};\r\n\r\n\tthis.getState = function() {\r\n\t\treturn {\r\n\t\t\ttarget0: scope.target0.clone(),\r\n\t\t\tposition0: scope.position0.clone(),\r\n\t\t\tzoom0: scope.zoom0,\r\n\t\t}\r\n\t}\r\n\r\n\tthis.loadState = function (state) {\r\n\t\tscope.target.copy( state.target0 );\r\n\t\tscope.object.position.copy( state.position0 );\r\n\t\tscope.object.zoom = state.zoom0;\r\n\r\n\t\tscope.object.updateProjectionMatrix();\r\n\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\tscope.update();\r\n\t}\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tscope.target.copy( scope.target0 );\r\n\t\tscope.object.position.copy( scope.position0 );\r\n\t\tscope.object.zoom = scope.zoom0;\r\n\r\n\t\tscope.object.updateProjectionMatrix();\r\n\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\tscope.update();\r\n\r\n\t\tstate = STATE.NONE;\r\n\r\n\t};\r\n\r\n\t// this method is exposed, but perhaps it would be better if we can make it private...\r\n\tthis.update = function () {\r\n\r\n\t\tvar offset = new Vector3();\r\n\r\n\t\t// so camera.up is the orbit axis\r\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\r\n\t\tvar quatInverse = quat.clone().inverse();\r\n\r\n\t\tvar lastPosition = new Vector3();\r\n\t\tvar lastQuaternion = new Quaternion();\r\n\r\n\t\tvar twoPI = 2 * Math.PI;\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tvar position = scope.object.position;\r\n\r\n\t\t\toffset.copy( position ).sub( scope.target );\r\n\r\n\t\t\t// rotate offset to \"y-axis-is-up\" space\r\n\t\t\toffset.applyQuaternion( quat );\r\n\r\n\t\t\t// angle from z-axis around y-axis\r\n\t\t\tspherical.setFromVector3( offset );\r\n\r\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\r\n\r\n\t\t\t\trotateLeft( getAutoRotationAngle() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scope.enableDamping ) {\r\n\r\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\r\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tspherical.theta += sphericalDelta.theta;\r\n\t\t\t\tspherical.phi += sphericalDelta.phi;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// restrict theta to be between desired limits\r\n\r\n\t\t\tvar min = scope.minAzimuthAngle;\r\n\t\t\tvar max = scope.maxAzimuthAngle;\r\n\r\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\r\n\r\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\r\n\r\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\r\n\r\n\t\t\t\tif ( min <= max ) {\r\n\r\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\r\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\r\n\t\t\t\t\t\tMath.min( max, spherical.theta );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// restrict phi to be between desired limits\r\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\r\n\r\n\t\t\tspherical.makeSafe();\r\n\r\n\r\n\t\t\tspherical.radius *= scale;\r\n\r\n\t\t\t// restrict radius to be between desired limits\r\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\r\n\r\n\t\t\t// move target to panned location\r\n\r\n\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tscope.target.add( panOffset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset.setFromSpherical( spherical );\r\n\r\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\r\n\t\t\toffset.applyQuaternion( quatInverse );\r\n\r\n\t\t\tposition.copy( scope.target ).add( offset );\r\n\r\n\t\t\tscope.object.lookAt( scope.target );\r\n\r\n\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\r\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\r\n\r\n\t\t\t\tpanOffset.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscale = 1;\r\n\r\n\t\t\t// update condition is:\r\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\r\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n\t\t\tif ( zoomChanged ||\r\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\r\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\t\t\tlastPosition.copy( scope.object.position );\r\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\r\n\t\t\t\tzoomChanged = false;\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\tthis.dispose = function () {\r\n\r\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\r\n\r\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown, false );\r\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\r\n\r\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\r\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\r\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\r\n\r\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\r\n\r\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\r\n\r\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n\r\n\t};\r\n\r\n\t//\r\n\t// internals\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tvar changeEvent = { type: 'change' };\r\n\tvar startEvent = { type: 'start' };\r\n\tvar endEvent = { type: 'end' };\r\n\r\n\tvar STATE = {\r\n\t\tNONE: - 1,\r\n\t\tROTATE: 0,\r\n\t\tDOLLY: 1,\r\n\t\tPAN: 2,\r\n\t\tTOUCH_ROTATE: 3,\r\n\t\tTOUCH_PAN: 4,\r\n\t\tTOUCH_DOLLY_PAN: 5,\r\n\t\tTOUCH_DOLLY_ROTATE: 6\r\n\t};\r\n\r\n\tvar state = STATE.NONE;\r\n\r\n\tvar EPS = 0.000001;\r\n\r\n\t// current position in spherical coordinates\r\n\tvar spherical = new Spherical();\r\n\tscope.spherical = spherical;\r\n\tvar sphericalDelta = new Spherical();\r\n\r\n\tvar scale = 1;\r\n\tvar panOffset = new Vector3();\r\n\tvar zoomChanged = false;\r\n\r\n\tvar rotateStart = new Vector2();\r\n\tvar rotateEnd = new Vector2();\r\n\tvar rotateDelta = new Vector2();\r\n\r\n\tvar panStart = new Vector2();\r\n\tvar panEnd = new Vector2();\r\n\tvar panDelta = new Vector2();\r\n\r\n\tvar dollyStart = new Vector2();\r\n\tvar dollyEnd = new Vector2();\r\n\tvar dollyDelta = new Vector2();\r\n\r\n\tfunction getAutoRotationAngle() {\r\n\r\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\r\n\r\n\t}\r\n\r\n\tfunction getZoomScale() {\r\n\r\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\r\n\r\n\t}\r\n\r\n\tfunction rotateLeft( angle ) {\r\n\r\n\t\tsphericalDelta.theta -= angle;\r\n\r\n\t}\r\n\r\n\tscope.rotateLeft = rotateLeft;\r\n\r\n\tfunction rotateUp( angle ) {\r\n\r\n\t\tsphericalDelta.phi -= angle;\r\n\r\n\t}\r\n\r\n\tscope.rotateUp = rotateUp;\r\n\r\n\tvar panLeft = function () {\r\n\r\n\t\tvar v = new Vector3();\r\n\r\n\t\treturn function panLeft( distance, objectMatrix ) {\r\n\r\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\r\n\t\t\tv.multiplyScalar( - distance );\r\n\r\n\t\t\tpanOffset.add( v );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\tvar panUp = function () {\r\n\r\n\t\tvar v = new Vector3();\r\n\r\n\t\treturn function panUp( distance, objectMatrix ) {\r\n\r\n\t\t\tif ( scope.screenSpacePanning === true ) {\r\n\r\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\r\n\t\t\t\tv.crossVectors( scope.object.up, v );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv.multiplyScalar( distance );\r\n\r\n\t\t\tpanOffset.add( v );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t// deltaX and deltaY are in pixels; right and down are positive\r\n\tvar pan = function () {\r\n\r\n\t\tvar offset = new Vector3();\r\n\r\n\t\treturn function pan( deltaX, deltaY ) {\r\n\r\n\t\t\tvar element = scope.domElement;\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\t// perspective\r\n\t\t\t\tvar position = scope.object.position;\r\n\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\t\t\t\tvar targetDistance = offset.length();\r\n\r\n\t\t\t\t// half of the fov is center to top of screen\r\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\r\n\r\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\r\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\r\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t// orthographic\r\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\r\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// camera neither orthographic nor perspective\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\r\n\t\t\t\tscope.enablePan = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\tfunction dollyOut( dollyScale ) {\r\n\r\n\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\tscale /= dollyScale;\r\n\r\n\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\r\n\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\tzoomChanged = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\tscope.enableZoom = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction dollyIn( dollyScale ) {\r\n\r\n\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\tscale *= dollyScale;\r\n\r\n\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\r\n\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\tzoomChanged = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\tscope.enableZoom = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\t// event callbacks - update the object state\r\n\t//\r\n\r\n\tfunction handleMouseDownRotate( event ) {\r\n\r\n\t\trotateStart.set( event.clientX, event.clientY );\r\n\r\n\t}\r\n\r\n\tfunction handleMouseDownDolly( event ) {\r\n\r\n\t\tdollyStart.set( event.clientX, event.clientY );\r\n\r\n\t}\r\n\r\n\tfunction handleMouseDownPan( event ) {\r\n\r\n\t\tpanStart.set( event.clientX, event.clientY );\r\n\r\n\t}\r\n\r\n\tfunction handleMouseMoveRotate( event ) {\r\n\r\n\t\trotateEnd.set( event.clientX, event.clientY );\r\n\r\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\tvar element = scope.domElement;\r\n\r\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\tscope.update();\r\n\r\n\t}\r\n\r\n\tfunction handleMouseMoveDolly( event ) {\r\n\r\n\t\tdollyEnd.set( event.clientX, event.clientY );\r\n\r\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\r\n\r\n\t\tif ( dollyDelta.y > 0 ) {\r\n\r\n\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t} else if ( dollyDelta.y < 0 ) {\r\n\r\n\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t}\r\n\r\n\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\tscope.update();\r\n\r\n\t}\r\n\r\n\tfunction handleMouseMovePan( event ) {\r\n\r\n\t\tpanEnd.set( event.clientX, event.clientY );\r\n\r\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\tpanStart.copy( panEnd );\r\n\r\n\t\tscope.update();\r\n\r\n\t}\r\n\r\n\tfunction handleMouseUp( /*event*/ ) {\r\n\r\n\t\t// no-op\r\n\r\n\t}\r\n\r\n\tfunction handleMouseWheel( event ) {\r\n\r\n\t\tif ( event.deltaY < 0 ) {\r\n\r\n\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t} else if ( event.deltaY > 0 ) {\r\n\r\n\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t}\r\n\r\n\t\tscope.update();\r\n\r\n\t}\r\n\r\n\tfunction handleKeyDown( event ) {\r\n\r\n\t\tvar needsUpdate = false;\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\r\n\t\t\tcase scope.keys.UP:\r\n\t\t\t\tpan( 0, scope.keyPanSpeed );\r\n\t\t\t\tneedsUpdate = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase scope.keys.BOTTOM:\r\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\r\n\t\t\t\tneedsUpdate = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase scope.keys.LEFT:\r\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\r\n\t\t\t\tneedsUpdate = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase scope.keys.RIGHT:\r\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\r\n\t\t\t\tneedsUpdate = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t// prevent the browser from scrolling on cursor keys\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartRotate( event ) {\r\n\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\r\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\r\n\r\n\t\t\trotateStart.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartPan( event ) {\r\n\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\r\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\r\n\r\n\t\t\tpanStart.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartDolly( event ) {\r\n\r\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\r\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\r\n\r\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\tdollyStart.set( 0, distance );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartDollyPan( event ) {\r\n\r\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\r\n\r\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartDollyRotate( event ) {\r\n\r\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\r\n\r\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMoveRotate( event ) {\r\n\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\r\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\r\n\r\n\t\t\trotateEnd.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\tvar element = scope.domElement;\r\n\r\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\trotateStart.copy( rotateEnd );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMovePan( event ) {\r\n\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\r\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\r\n\r\n\t\t\tpanEnd.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\tpanStart.copy( panEnd );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMoveDolly( event ) {\r\n\r\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\r\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\r\n\r\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\tdollyEnd.set( 0, distance );\r\n\r\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\r\n\r\n\t\tdollyOut( dollyDelta.y );\r\n\r\n\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMoveDollyPan( event ) {\r\n\r\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMoveDollyRotate( event ) {\r\n\r\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchEnd( /*event*/ ) {\r\n\r\n\t\t// no-op\r\n\r\n\t}\r\n\r\n\t//\r\n\t// event handlers - FSM: listen for events and reset state\r\n\t//\r\n\r\n\tfunction onPointerDown( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tonMouseDown( event );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// TODO touch\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onPointerMove( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tonMouseMove( event );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// TODO touch\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onPointerUp( event ) {\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tonMouseUp( event );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// TODO touch\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onMouseDown( event ) {\r\n\r\n\t\t// Prevent the browser from scrolling.\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// Manually set the focus since calling preventDefault above\r\n\t\t// prevents the browser from setting it automatically.\r\n\r\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\r\n\r\n\t\tvar mouseAction;\r\n\r\n\t\tswitch ( event.button ) {\r\n\r\n\t\t\tcase 0:\r\n\r\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\r\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tmouseAction = - 1;\r\n\r\n\t\t}\r\n\r\n\t\tswitch ( mouseAction ) {\r\n\r\n\t\t\tcase MOUSE.DOLLY:\r\n\r\n\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\thandleMouseDownDolly( event );\r\n\r\n\t\t\t\tstate = STATE.DOLLY;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase MOUSE.ROTATE:\r\n\r\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase MOUSE.PAN:\r\n\r\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\r\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\r\n\r\n\t\t\tscope.dispatchEvent( startEvent );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onMouseMove( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tswitch ( state ) {\r\n\r\n\t\t\tcase STATE.ROTATE:\r\n\r\n\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\thandleMouseMoveRotate( event );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.DOLLY:\r\n\r\n\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\thandleMouseMoveDolly( event );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.PAN:\r\n\r\n\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\thandleMouseMovePan( event );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onMouseUp( event ) {\r\n\r\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\thandleMouseUp( event );\r\n\r\n\t\tscope.dispatchEvent( endEvent );\r\n\r\n\t\tstate = STATE.NONE;\r\n\r\n\t}\r\n\r\n\tfunction onMouseWheel( event ) {\r\n\r\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\r\n\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tscope.dispatchEvent( startEvent );\r\n\r\n\t\thandleMouseWheel( event );\r\n\r\n\t\tscope.dispatchEvent( endEvent );\r\n\r\n\t}\r\n\r\n\tfunction onKeyDown( event ) {\r\n\r\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\r\n\r\n\t\thandleKeyDown( event );\r\n\r\n\t}\r\n\r\n\tfunction onTouchStart( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tevent.preventDefault(); // prevent scrolling\r\n\r\n\t\tswitch ( event.touches.length ) {\r\n\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tswitch ( scope.touches.ONE ) {\r\n\r\n\t\t\t\t\tcase TOUCH.ROTATE:\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleTouchStartRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase TOUCH.PAN:\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleTouchStartPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\r\n\t\t\t\tswitch ( scope.touches.TWO ) {\r\n\r\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\r\n\r\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\r\n\r\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\tscope.dispatchEvent( startEvent );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onTouchMove( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tevent.preventDefault(); // prevent scrolling\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tswitch ( state ) {\r\n\r\n\t\t\tcase STATE.TOUCH_ROTATE:\r\n\r\n\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\thandleTouchMoveRotate( event );\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.TOUCH_PAN:\r\n\r\n\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\thandleTouchMovePan( event );\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\r\n\r\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\thandleTouchMoveDollyPan( event );\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\r\n\r\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\thandleTouchMoveDollyRotate( event );\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onTouchEnd( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\thandleTouchEnd( event );\r\n\r\n\t\tscope.dispatchEvent( endEvent );\r\n\r\n\t\tstate = STATE.NONE;\r\n\r\n\t}\r\n\r\n\tfunction onContextMenu( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\r\n\r\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown, false );\r\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\r\n\r\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\r\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\r\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\r\n\r\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\r\n\r\n\t// force an update at start\r\n\r\n\tthis.update();\r\n};\r\n\r\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\r\nOrbitControls.prototype.constructor = OrbitControls;\r\n\r\n\r\n// This set of controls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n// This is very similar to OrbitControls, another set of touch behavior\r\n//\r\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - left mouse, or arrow keys / touch: one-finger move\r\n\r\nvar MapControls = function ( object, domElement ) {\r\n\r\n\tOrbitControls.call( this, object, domElement );\r\n\r\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\r\n\r\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\r\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\r\n\r\n\tthis.touches.ONE = TOUCH.PAN;\r\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\r\n\r\n};\r\n\r\nMapControls.prototype = Object.create( EventDispatcher.prototype );\r\nMapControls.prototype.constructor = MapControls;\r\n\r\nexport { OrbitControls, MapControls };\r\n\r\n","import {\r\n  AmbientLight,\r\n\r\n  CanvasTexture,\r\n  Color,\r\n  DoubleSide,\r\n  Euler,\r\n  MathUtils,\r\n  Mesh,\r\n  MeshStandardMaterial,\r\n  OrthographicCamera,\r\n  PlaneGeometry,\r\n  Scene,\r\n  Spherical,\r\n  Texture,\r\n  TextureLoader,\r\n  Vector2,\r\n  Vector3,\r\n  WebGLRenderer\r\n} from \"three\";\r\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\r\nimport { FilmPass } from \"three/examples/jsm/postprocessing/FilmPass\";\r\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\r\nimport { AdversaryPointCloud } from \"./AdversaryPointCloud\";\r\nimport { GUIState } from \"./App\";\r\nimport { GradientEffect } from \"./GradientEffect\";\r\nimport { OrbitControls } from \"./OrbitControls\";\r\nimport { smoothstep } from \"./smoothstep\";\r\n\r\nexport class AdversaryDriver {\r\n  public renderer: WebGLRenderer;\r\n  public scene: Scene;\r\n  public camera: OrthographicCamera;\r\n  controls: OrbitControls;\r\n  adversary?: Mesh;\r\n  adversaryMaterial?: MeshStandardMaterial;\r\n  timeStarted = 0;\r\n  geom = new PlaneGeometry(200, 200, 512, 512);\r\n  textureBase?: Texture;\r\n  gradientEffect!: GradientEffect;\r\n  pointCloud?: AdversaryPointCloud;\r\n  // in [0 to 1]\r\n  maxBrightness!: number;\r\n  minBrightness!: number;\r\n  composer: EffectComposer;\r\n  filmPass: FilmPass;\r\n  // normalized in [-1, 1]\r\n  mouse = new Vector2();\r\n  spherical0: Spherical;\r\n  constructor(public canvas: HTMLCanvasElement, private state: GUIState) {\r\n    this.renderer = new WebGLRenderer({ canvas });\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    this.scene = new Scene();\r\n\r\n    // frustrum will be set by handleWindowResize\r\n    this.camera = new OrthographicCamera(-1, 1, 1, -1, -9999, 9999);\r\n    this.camera.position.set(0, 0, 100);\r\n    this.camera.lookAt(0, 0, 0);\r\n\r\n    // also sets renderer initial size\r\n    this.handleWindowResize();\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n\r\n    window.addEventListener(\"mousemove\", this.handleMouseMove);\r\n\r\n    this.scene.add(new AmbientLight(0xffffff));\r\n    this.scene.background = new Color(1, 1, 1);\r\n\r\n    this.loadDefaultImage();\r\n\r\n    this.controls = new OrbitControls(this.camera, this.canvas);\r\n    this.spherical0 = new Spherical();\r\n    this.spherical0.setFromVector3(this.camera.position);\r\n\r\n    this.composer = new EffectComposer(this.renderer);\r\n    this.composer.addPass(new RenderPass(this.scene, this.camera));\r\n    this.filmPass = new FilmPass(0, 0, 4096, 0);\r\n    this.composer.addPass(this.filmPass);\r\n\r\n    this.setState(state);\r\n    requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  handleMouseMove = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    const aspect = window.innerWidth / window.innerHeight;\r\n\r\n    this.mouse.x = (event.clientX / window.innerWidth * 2 - 1) * aspect;\r\n    this.mouse.y = (1 - event.clientY / window.innerHeight) * 2 - 1;\r\n\r\n    if (this.state.parallaxEnabled && this.state.parallaxRespondsToMouseMovement) {\r\n        const parallaxAmount = Math.PI / 4 * this.state.parallaxIntensity / window.innerHeight * 3;\r\n        (this.controls as any).rotateLeft(-parallaxAmount * event.movementX);\r\n        (this.controls as any).rotateUp(-parallaxAmount * event.movementY);\r\n    }\r\n  }\r\n\r\n  setImage(img: HTMLImageElement) {\r\n    const texture = new Texture(img);\r\n    img.onload = function () {\r\n      texture.needsUpdate = true;\r\n    };\r\n    this.recreateAdversary(texture);\r\n  }\r\n\r\n  setState(state: GUIState) {\r\n    this.state = state;\r\n    (this.filmPass.uniforms as any).nIntensity.value = state.noiseIntensity;\r\n    (this.filmPass.uniforms as any).sIntensity.value = state.scanlineIntensity;\r\n    this.gradientEffect?.material.update(state);\r\n    if (this.adversaryMaterial != null) {\r\n      if (state.gradientEnabled) {\r\n        this.adversaryMaterial.map = this.gradientEffect.texture;\r\n      } else {\r\n        this.adversaryMaterial.map = this.textureBase!;\r\n      }\r\n      this.adversaryMaterial.needsUpdate = true;\r\n    }\r\n    (this.scene.background as Color).set(state.background);\r\n    if (\r\n      state.mode === \"heightmap\" &&\r\n      this.adversary != null &&\r\n      this.adversary.parent == null\r\n    ) {\r\n      this.scene.add(this.adversary);\r\n      if (this.pointCloud) {\r\n        this.scene.remove(this.pointCloud);\r\n      }\r\n    } else if (\r\n      state.mode === \"particles\" &&\r\n      this.pointCloud != null &&\r\n      this.pointCloud.parent == null\r\n    ) {\r\n      this.scene.add(this.pointCloud);\r\n      if (this.adversary) {\r\n        this.scene.remove(this.adversary);\r\n      }\r\n    }\r\n  }\r\n\r\n  cameraTarget?: Vector3;\r\n  goDiagonalView() {\r\n    this.cameraTarget = new Vector3(0, 0, 100);\r\n    this.cameraTarget.applyEuler(new Euler(Math.PI / 6, Math.PI / 6));\r\n  }\r\n\r\n  goFrontalView() {\r\n    this.cameraTarget = new Vector3(0, 0, 100);\r\n  }\r\n\r\n  private recreateAdversary(textureBase: Texture) {\r\n    if (this.adversary != null) {\r\n      this.scene.remove(this.adversary);\r\n      this.adversaryMaterial?.dispose();\r\n    }\r\n    if (this.pointCloud != null) {\r\n      this.scene.remove(this.pointCloud);\r\n    }\r\n    this.textureBase = textureBase;\r\n    const {\r\n      texture: displacementMap,\r\n      maxBrightness,\r\n      minBrightness,\r\n    } = this.createDisplacementMap(textureBase)!;\r\n    this.maxBrightness = maxBrightness;\r\n    this.minBrightness = minBrightness;\r\n    this.gradientEffect = new GradientEffect(\r\n      textureBase,\r\n      this.state,\r\n      maxBrightness,\r\n      minBrightness\r\n    );\r\n    this.adversaryMaterial = new MeshStandardMaterial({\r\n      side: DoubleSide,\r\n      map: this.gradientEffect.texture,\r\n      displacementMap,\r\n      displacementScale: 0,\r\n      transparent: true,\r\n      roughness: 1,\r\n      metalness: 0,\r\n    });\r\n    if (this.state.gradientEnabled) {\r\n      this.adversaryMaterial.map = this.gradientEffect.texture;\r\n    } else {\r\n      this.adversaryMaterial.map = this.textureBase!;\r\n    }\r\n    this.adversary = new Mesh(this.geom, this.adversaryMaterial);\r\n    this.pointCloud = new AdversaryPointCloud(textureBase);\r\n    if (this.state.mode === \"heightmap\") {\r\n      this.scene.add(this.adversary);\r\n    } else {\r\n      this.scene.add(this.pointCloud);\r\n    }\r\n\r\n    this.composer.render();\r\n    this.timeStarted = performance.now();\r\n  }\r\n\r\n  loadDefaultImage() {\r\n    new TextureLoader().load(\r\n      \"/2005-crowdstrike-adversary/adversaries/Buffalo.jpg\",\r\n      (texture) => {\r\n        this.recreateAdversary(texture);\r\n      },\r\n      (event) => console.log(event),\r\n      (event) => console.error(event)\r\n    );\r\n  }\r\n\r\n  handleWindowResize = () => {\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    const aspect = window.innerWidth / window.innerHeight;\r\n    const halfHeight = 150;\r\n    this.camera.left = -halfHeight * aspect;\r\n    this.camera.right = halfHeight * aspect;\r\n    this.camera.top = halfHeight;\r\n    this.camera.bottom = -halfHeight;\r\n    this.camera.updateProjectionMatrix();\r\n  };\r\n\r\n  animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n    if (this.cameraTarget != null) {\r\n      this.updateCameraTarget();\r\n    } else {\r\n      if (this.state.parallaxEnabled) {\r\n        this.updateCameraParallax();\r\n      }\r\n      this.controls.update();\r\n    }\r\n    if (this.adversaryMaterial != null && this.adversary != null) {\r\n      const zScale =\r\n        (smoothstep(0, 5000, performance.now() - this.timeStarted) *\r\n          this.state.growLength) /\r\n        this.maxBrightness;\r\n      this.adversaryMaterial.displacementScale = zScale;\r\n      this.adversary.position.z = -zScale / 2;\r\n    }\r\n    if (this.state.mode === \"particles\") {\r\n      this.pointCloud?.animate();\r\n    }\r\n    this.gradientEffect?.material.update(this.state);\r\n    this.gradientEffect?.render(this.renderer);\r\n    this.composer.render();\r\n  };\r\n\r\n  updateCameraTarget() {\r\n    if (this.cameraTarget != null) {\r\n      if (this.camera.position.distanceTo(this.cameraTarget) < 1) {\r\n        // we're done\r\n        this.camera.position.copy(this.cameraTarget);\r\n        this.camera.lookAt(0, 0, 0);\r\n        delete this.cameraTarget; \r\n      } else {\r\n        this.camera.position.lerp(this.cameraTarget, 0.1);\r\n        this.camera.lookAt(0, 0, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateCameraParallax() {\r\n    const controls = this.controls as any;\r\n    if (this.state.parallaxRespondsToMouseMovement) {\r\n      // lerp towards position0 \r\n      var damping = 0.1 * (2 ** (this.state.parallaxReturnSpeed - 3));\r\n      var spherical = new Spherical();\r\n      spherical.setFromVector3(this.camera.position);\r\n      controls.rotateLeft((spherical.theta - this.spherical0.theta) * damping);\r\n      controls.rotateUp((spherical.phi - this.spherical0.phi) * damping);\r\n    } else {\r\n      // reset rotation but don't reset zoom\r\n      controls.target.copy(controls.target0);\r\n      controls.object.position.copy(controls.position0);\r\n      const parallaxAmount = Math.PI / 4 * this.state.parallaxIntensity;\r\n      controls.rotateLeft(-parallaxAmount * this.mouse.x);\r\n      controls.rotateUp(parallaxAmount * this.mouse.y);\r\n    }\r\n  }\r\n\r\n  private createDisplacementMap(source: Texture) {\r\n    const { imageData, canvas } = downsampledImageData(\r\n      source.image as HTMLImageElement,\r\n      256\r\n    );\r\n    var maxBrightness = 0;\r\n    var minBrightness = 1;\r\n\r\n    for (let i = 0; i < imageData.data.length; i += 4) {\r\n      const r = imageData.data[i] / 255,\r\n        g = imageData.data[i + 1] / 255,\r\n        b = imageData.data[i + 2] / 255;\r\n      const brightness = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n      maxBrightness = Math.max(brightness, maxBrightness);\r\n      minBrightness = Math.min(brightness, minBrightness);\r\n      imageData.data[i] = imageData.data[i + 1] = imageData.data[\r\n        i + 2\r\n      ] = brightness;\r\n    }\r\n    // context.putImageData(imageData, 0, 0);\r\n    const texture = new CanvasTexture(canvas);\r\n    return { texture, imageData, maxBrightness, minBrightness };\r\n  }\r\n\r\n  private generateDisplacementMappedGeometry(image: HTMLImageElement) {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = image.width / 10;\r\n    canvas.height = image.height / 10;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context) {\r\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n      const { width, height } = canvas;\r\n      const imageData = context.getImageData(0, 0, width, height);\r\n      // document.body.appendChild(canvas);\r\n      // PlaneGeometry adds 1 vertex row and column, but we don't have\r\n      // imageData there, so we must shrink PlaneGeometry to accomodate\r\n      const geom = new PlaneGeometry(\r\n        width - 1,\r\n        height - 1,\r\n        width - 1,\r\n        height - 1\r\n      );\r\n      for (const vertex of geom.vertices) {\r\n        // -0.5 to line it up perfectly with the grid\r\n        const x = MathUtils.mapLinear(\r\n          vertex.x - 0.5,\r\n          -width / 2,\r\n          width / 2,\r\n          0,\r\n          width\r\n        );\r\n        /// invert the y!\r\n        const y = MathUtils.mapLinear(\r\n          vertex.y - 0.5,\r\n          height / 2,\r\n          -height / 2,\r\n          0,\r\n          height\r\n        );\r\n        const imageDataIndex = (x + width * y) * 4;\r\n        const r = imageData.data[imageDataIndex] / 255,\r\n          g = imageData.data[imageDataIndex + 1] / 255,\r\n          b = imageData.data[imageDataIndex + 2] / 255;\r\n        const brightness = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        vertex.z = brightness * 20;\r\n      }\r\n\r\n      const scale = 200 / Math.max(width, height);\r\n      geom.scale(scale, scale, 1);\r\n      geom.computeFlatVertexNormals();\r\n      return geom;\r\n    }\r\n  }\r\n}\r\n\r\nexport function downsampledImageData(image: HTMLImageElement, width: number) {\r\n  var canvas = document.createElement(\"canvas\");\r\n  const height = (image.height / image.width) * width;\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n\r\n  const context = canvas.getContext(\"2d\")!;\r\n  context.drawImage(image, 0, 0, width, height);\r\n  const imageData = context.getImageData(0, 0, width, height);\r\n  return { canvas, imageData };\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { AdversaryDriver } from \"./AdversaryDriver\";\r\nimport { GUIState } from \"./App\";\r\n\r\nexport var DRIVER: AdversaryDriver;\r\n\r\nexport const AdversaryRendering = ({ img, state }: { img: HTMLImageElement | undefined; state: GUIState }) => {\r\n  const driver = useRef<AdversaryDriver>();\r\n  const handleRef = React.useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (canvas != null) {\r\n      driver.current = new AdversaryDriver(canvas, state);\r\n      DRIVER = driver.current;\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    if (driver.current != null && img != null) {\r\n      driver.current.setImage(img);\r\n    }\r\n  }, [img]);\r\n  useEffect(() => {\r\n    if (driver.current != null) {\r\n      driver.current.setState(state);\r\n    }\r\n  }, [state]);\r\n  return <canvas ref={handleRef}></canvas>;\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { DropEvent, FileRejection, useDropzone } from \"react-dropzone\";\r\n\r\nexport const ImageDropzone: React.FC<{\r\n  onGotImage: (img: HTMLImageElement) => void;\r\n}> = ({ onGotImage }) => {\r\n  const onDrop = useCallback(\r\n    (files: File[], rejected: FileRejection[], event: DropEvent) => {\r\n      files.forEach((file) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onabort = () => console.log(\"file reading was aborted\");\r\n        reader.onerror = () => console.log(\"file reading has failed\");\r\n        reader.onload = () => {\r\n          const img = document.createElement(\"img\");\r\n          img.src = reader.result as string;\r\n          onGotImage(img);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    },\r\n    [onGotImage]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    maxFiles: 1,\r\n  });\r\n\r\n  return (\r\n    <div className=\"dropzone\" {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p>Drop the files here ...</p>\r\n      ) : (\r\n        <>\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n          <p>Press <b>Z</b> to toggle the UI</p>\r\n        </>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport DatGui, {\n  DatBoolean,\n  DatButton,\n  DatColor,\n  DatFolder,\n  DatNumber,\n  DatSelect,\n  DatString\n} from \"react-dat-gui\";\nimport \"react-dat-gui/dist/index.css\";\nimport { AdversaryRendering, DRIVER } from \"./AdversaryRendering\";\nimport \"./App.css\";\nimport { ImageDropzone } from \"./ImageDropzone\";\n\nexport interface GUIState {\n  mode: \"heightmap\" | \"particles\";\n  particleDistortion: \"messycircle\" | \"noiseflow\" | \"sphere\";\n  noiseIntensity: number;\n  scanlineIntensity: number;\n  parallaxEnabled: boolean;\n  parallaxRespondsToMouseMovement: boolean;\n  parallaxReturnSpeed: number;\n  parallaxIntensity: number;\n  background: string;\n  gradient: string;\n  gradientEnabled: boolean;\n  growLength: number;\n  gradientTransparency: boolean;\n}\n\nexport const STATE: GUIState = {\n  mode: \"heightmap\",\n  particleDistortion: \"noiseflow\",\n  background: \"#808080\",\n  growLength: 50,\n  noiseIntensity: 0.25,\n  scanlineIntensity: 0.0,\n  parallaxEnabled: false,\n  parallaxIntensity: 0.5,\n  parallaxRespondsToMouseMovement: false,\n  parallaxReturnSpeed: 3,\n  gradientEnabled: true,\n  gradient: \"#131B1D #31474D #FC0000 #ABABAB #FFFFFF\",\n  gradientTransparency: true,\n};\n\nfunction App() {\n  const [img, setImage] = useState<HTMLImageElement>();\n  const [state, setState] = useState<GUIState>(STATE);\n  const [showUI, setShowUI] = useState(true);\n  useEffect(() => {\n    Object.assign(STATE, state);\n  }, [state]);\n  useEffect(() => {\n    const handleKeyup = (event: KeyboardEvent) => {\n      if (event.code === \"KeyZ\") {\n        setShowUI((show) => !show);\n      }\n    };\n    window.addEventListener(\"keyup\", handleKeyup);\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyup);\n    }\n  });\n  const handleCameraFrontalView = useCallback(() => {\n    DRIVER?.goFrontalView();\n  }, []);\n  const handleCameraDiagonalView = useCallback(() => {\n    DRIVER?.goDiagonalView();\n  }, []);\n  return (\n    <div className={`App${!showUI ? \" hide-ui\" : \"\"}`}>\n      <AdversaryRendering img={img} state={state} />\n      <ImageDropzone onGotImage={setImage} />\n      <DatGui data={state} onUpdate={setState}>\n        <DatSelect\n          path=\"mode\"\n          label=\"Mode\"\n          options={[\"heightmap\", \"particles\"]}\n        />\n        <DatSelect\n          path=\"particleDistortion\"\n          label=\"Particle Distortion\"\n          options={[\"noiseflow\", \"sphere\", \"messycircle\"]}\n        />\n        <DatColor path=\"background\" label=\"Background\" />\n        <DatNumber\n          path=\"growLength\"\n          label=\"Grow Length\"\n          min={0}\n          max={500}\n          step={5}\n        />\n        <DatFolder closed={false} title=\"Postprocessing\">\n          <DatNumber\n            path=\"noiseIntensity\"\n            label=\"Noise\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n          <DatNumber\n            path=\"scanlineIntensity\"\n            label=\"Scanlines\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </DatFolder>\n        <DatFolder closed={false} title=\"Parallax\">\n          <DatBoolean path=\"parallaxEnabled\" label=\"Parallax Enabled?\" />\n          <DatNumber path=\"parallaxIntensity\" label=\"Intensity\" min={0} max={2} step={0.01} />\n          <DatBoolean path=\"parallaxRespondsToMouseMovement\" label=\"Returns to 0?\" />\n          <DatNumber path=\"parallaxReturnSpeed\" label=\"Return to 0 Speed\" min={0} max={6} step={0.1} />\n        </DatFolder>\n        <DatFolder closed={false} title={\"Gradient\"}>\n          <DatBoolean path=\"gradientEnabled\" label=\"Gradient Enabled?\" />\n          <DatString path=\"gradient\" label=\"Gradient\" />\n          <DatBoolean path=\"gradientTransparency\" label=\"Transparency?\" />\n        </DatFolder>\n        <DatButton label=\"Go to Frontal View\" onClick={handleCameraFrontalView} />\n        <DatButton label=\"Go to Diagonal View\" onClick={handleCameraDiagonalView} />\n      </DatGui>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n  LinearFilter,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  NearestFilter,\r\n  OrthographicCamera,\r\n  PlaneBufferGeometry,\r\n  Scene,\r\n  ShaderMaterial,\r\n  Texture,\r\n  Vector2,\r\n  WebGLRenderer,\r\n  WebGLRenderTarget\r\n} from \"three\";\r\nimport { glsl } from \"./glsl\";\r\n\r\n// adapted from https://github.com/jpupper/WebShaderGallery/blob/master/js/render.js\r\nexport class PixelBleed {\r\n  public renderer: WebGLRenderer;\r\n  public scene: Scene;\r\n  public camera: OrthographicCamera;\r\n  textureA: WebGLRenderTarget;\r\n  textureB: WebGLRenderTarget;\r\n  bufferMaterial: ShaderMaterial;\r\n  finalMaterial: MeshBasicMaterial;\r\n  bufferObject: Mesh<any, any>;\r\n  bufferScene = new Scene();\r\n  quad: Mesh<any, any>;\r\n  mouse = new Vector2();\r\n  constructor(public canvas: HTMLCanvasElement, public imgTexture: Texture) {\r\n    this.renderer = new WebGLRenderer({ canvas });\r\n\r\n    this.scene = new Scene();\r\n\r\n    const { width, height } = canvas;\r\n    this.camera = new OrthographicCamera(\r\n      width / -2,\r\n      width / 2,\r\n      height / 2,\r\n      height / -2,\r\n      1,\r\n      1000\r\n    );\r\n    this.camera.position.z = 2;\r\n\r\n    this.textureA = new WebGLRenderTarget(canvas.width, canvas.height, {\r\n      minFilter: LinearFilter,\r\n      magFilter: NearestFilter,\r\n    });\r\n    this.textureB = new WebGLRenderTarget(canvas.width, canvas.height, {\r\n      minFilter: LinearFilter,\r\n      magFilter: NearestFilter,\r\n    });\r\n    // pipeline:\r\n    // start: textureA is source, textureB is the target. This is caused by:\r\n    //    bufferMaterial uses textureA as a uniform\r\n    //    finalMaterial uses textureB as a map\r\n    // renderB() updates B\r\n    // swap() makes B now A, and you can start again\r\n    this.bufferMaterial = new ShaderMaterial({\r\n      uniforms: {\r\n        feedback: { value: this.textureA.texture },\r\n        resolution: { value: new Vector2(canvas.width, canvas.height) },\r\n        mouse: { value: new Vector2(0, 0) },\r\n        time: { value: Math.random() * Math.PI * 2 + Math.PI },\r\n      },\r\n      vertexShader,\r\n      fragmentShader,\r\n    });\r\n    const plane = new PlaneBufferGeometry(canvas.width, canvas.height);\r\n    this.bufferObject = new Mesh(plane, this.bufferMaterial);\r\n    this.bufferScene.add(this.bufferObject);\r\n\r\n    //Prepare buffer scene to be drawn into\r\n    this.finalMaterial = new MeshBasicMaterial({ map: this.textureB.texture, transparent: true });\r\n    this.quad = new Mesh(plane, this.finalMaterial);\r\n    this.scene.add(this.quad);\r\n\r\n    //Draw img onto textureA\r\n    this.finalMaterial.map = imgTexture;\r\n    this.renderer.setRenderTarget(this.textureA);\r\n    this.renderer.clear();\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.renderer.setRenderTarget(null);\r\n    this.finalMaterial.map = this.textureB.texture;\r\n\r\n    requestAnimationFrame(this.animate);\r\n    console.log(this);\r\n    window.addEventListener(\"mousemove\", this.onDocumentMouseMove);\r\n  }\r\n\r\n  animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n\r\n    //Draw to textureB\r\n    this.renderB();\r\n\r\n    // textureB is now in textureA\r\n    // this.swap();\r\n\r\n    this.bufferObject.material.uniforms.mouse.value = new Vector2(\r\n      this.mouse.x,\r\n      this.mouse.y\r\n    );\r\n    // this.bufferObject.material.uniforms.touchesCount.value = touchesCount;\r\n    // this.bufferObject.material.uniforms.touchesPos.value = touchesPos;\r\n    //Update time\r\n    this.bufferMaterial.uniforms.time.value += 0.01;\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  };\r\n\r\n  renderB() {\r\n    this.renderer.setRenderTarget(this.textureB);\r\n    this.renderer.clear();\r\n    this.renderer.render(this.bufferScene, this.camera);\r\n    this.renderer.setRenderTarget(null);\r\n  }\r\n\r\n  swap() {\r\n    //Swap textureA and B\r\n    var t = this.textureA;\r\n    this.textureA = this.textureB;\r\n    this.textureB = t;\r\n    this.finalMaterial.map = this.textureB.texture;\r\n\r\n    this.bufferMaterial.uniforms.feedback.value = this.textureA.texture;\r\n  }\r\n\r\n  onDocumentMouseMove = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n\r\n    this.mouse.x = event.clientX / window.innerWidth;\r\n    this.mouse.y = 1 - event.clientY / window.innerHeight;\r\n  }\r\n}\r\n\r\nconst vertexShader = glsl`\r\nvarying vec2 vUv;\r\n\r\nvoid main()\t{\r\n\tvUv = uv;\r\n\tgl_Position = vec4( position, 1.0 );\r\n}\r\n`;\r\n\r\nconst noise = glsl`\r\n//\tClassic Perlin 2D Noise \r\n//\tby Stefan Gustavson\r\n//\r\nvec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\r\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\r\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\r\n\r\n\r\nfloat cnoise(vec2 P){\r\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\r\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\r\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\r\n  vec4 ix = Pi.xzxz;\r\n  vec4 iy = Pi.yyww;\r\n  vec4 fx = Pf.xzxz;\r\n  vec4 fy = Pf.yyww;\r\n  vec4 i = permute(permute(ix) + iy);\r\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\r\n  vec4 gy = abs(gx) - 0.5;\r\n  vec4 tx = floor(gx + 0.5);\r\n  gx = gx - tx;\r\n  vec2 g00 = vec2(gx.x,gy.x);\r\n  vec2 g10 = vec2(gx.y,gy.y);\r\n  vec2 g01 = vec2(gx.z,gy.z);\r\n  vec2 g11 = vec2(gx.w,gy.w);\r\n  vec4 norm = 1.79284291400159 - 0.85373472095314 * \r\n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\r\n  g00 *= norm.x;\r\n  g01 *= norm.y;\r\n  g10 *= norm.z;\r\n  g11 *= norm.w;\r\n  float n00 = dot(g00, vec2(fx.x, fy.x));\r\n  float n10 = dot(g10, vec2(fx.y, fy.y));\r\n  float n01 = dot(g01, vec2(fx.z, fy.z));\r\n  float n11 = dot(g11, vec2(fx.w, fy.w));\r\n  vec2 fade_xy = fade(Pf.xy);\r\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\r\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\r\n  return 2.3 * n_xy;\r\n}\r\n`;\r\n\r\nconst fragmentShader = glsl`\r\nuniform vec2 resolution; // The width and height of our screen\r\nuniform sampler2D feedback; // Our input texture\r\nuniform float time;\r\nuniform vec2 mouse;\r\n\r\nvarying vec2 vUv;\r\n\r\n${noise}\r\n\r\nfloat brightness(vec3 col) {\r\n  return dot(col.rgb, vec3(0.299, 0.587, 0.114));\r\n}\r\n\r\nvoid main() {\r\n  vec2 uv = gl_FragCoord.xy / resolution.xy;\r\n  vec2 delta = 1.0 / resolution.xy;\r\n  vec2 mouseNorm = vec2(0.5) - mouse;\r\n\r\n  vec4 uv0 = texture2D(feedback, uv);\r\n  vec4 finalColor = uv0;\r\n\r\n  float dif = 1.0; // sin(time) * 0.2;\r\n  vec2 puv = uv;\r\n  for (int i = 0; i < 10; i++) {\r\n    vec2 offset = vec2(\r\n      cnoise(puv * 2. + vec2(time, 0)),\r\n      cnoise(puv * 2. + vec2(91.3 - time, -123.2 + time))\r\n    );\r\n    offset -= mouseNorm * 10.;\r\n\r\n    puv = puv + delta * offset * 2.;\r\n\r\n    vec4 up = texture2D(feedback, puv);\r\n\r\n    if (dif * (brightness(up.rgb) - brightness(finalColor.rgb)) > 0.) {\r\n      finalColor = mix(finalColor, up, 0.5);\r\n    }\r\n  }\r\n\r\n  gl_FragColor = finalColor;\r\n}\r\n`;\r\n","import React, { useRef } from \"react\";\nimport \"react-dat-gui/dist/index.css\";\nimport { TextureLoader } from \"three\";\nimport { PixelBleed } from \"./PixelBleed\";\n\nfunction AppPixelBleed() {\n  const driver = useRef<PixelBleed>();\n  const handleRef = React.useCallback((canvas: HTMLCanvasElement | null) => {\n    if (canvas != null) {\n      new TextureLoader().load(\"/2005-crowdstrike-adversary/tone-mapped-Buffalo.png\", (imgTexture) => {\n        canvas.width = imgTexture.image.width;\n        canvas.height = imgTexture.image.height;\n        driver.current = new PixelBleed(canvas, imgTexture);\n      })\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div style={{background: \"grey\", width: \"100vw\", height: \"100vh\"}}>\n      <canvas ref={handleRef} style={{position: \"absolute\", \"left\": \"50%\", top: \"50%\", transform: \"translate(-50%, -50%)\"}}></canvas>\n    </div>\n  );\n}\n\nexport default AppPixelBleed;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport AppPixelBleed from \"./AppPixelBleed\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/pixelbleed\">\n          <AppPixelBleed />\n        </Route>\n        <Route>\n          <App />\n        </Route>\n      </Switch>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}