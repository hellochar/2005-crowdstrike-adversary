{"version":3,"sources":["glsl.tsx","GLSL_NOISE.tsx","GradientEffect.tsx","AdversaryMaterial.tsx","OrbitControls.js","AdversaryDriver.tsx","AdversaryRendering.tsx","smoothstep.tsx","BuiltinTextures.tsx","ImageDropzone.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["glsl","literals","result","i","length","GLSL_NOISE","GradientEffect","source","state","maxBrightness","minBrightness","target","fsQuad","material","this","WebGLRenderTarget","GradientShaderMaterial","Pass","FullScreenQuad","texture","textureBase","uniforms","tSource","value","needsUpdate","renderer","setRenderTarget","render","gradient","Array","fill","map","Color","gradientLength","transparency","enabled","vertexShader","fragmentShader","transparent","console","log","update","gradientColors","split","x","forEach","color","index","gradientTransparency","gradientEnabled","ShaderMaterial","AdversaryMaterial","baseTexture","gradientEffect","breatheWaviness","breatheSpeed","breatheWholeBodyMovement","breatheTallPointExaggeration","breatheNoiseSpeed","breatheNoiseAmount","breatheZAmount","breatheXYAmount","time","displacementScale","side","DoubleSide","textureCache","activeTexture","updateMap","setTextureBase","STATE","zScale","DRIVER","OrbitControls","object","domElement","undefined","warn","document","error","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","getState","loadState","updateProjectionMatrix","dispatchEvent","changeEvent","reset","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","prototype","Object","create","EventDispatcher","constructor","MapControls","call","AdversaryDriver","canvas","scene","camera","controls","adversary","composer","filmPass","mouse","spherical0","handleMouseMove","aspect","innerWidth","innerHeight","parallaxEnabled","parallaxRespondsToMouseMovement","parallaxAmount","parallaxIntensity","movementX","movementY","cameraTarget","handleWindowResize","setSize","halfHeight","animate","requestAnimationFrame","updateCameraTarget","updateCameraParallax","WebGLRenderer","setPixelRatio","devicePixelRatio","Scene","OrthographicCamera","AmbientLight","background","adversaryMaterial","AdversaryMesh","setAdversary","EffectComposer","addPass","RenderPass","FilmPass","setState","img","Texture","onload","setAdversaryTexture","name","TextureLoader","load","nIntensity","noiseIntensity","sIntensity","scanlineIntensity","applyEuler","Euler","distanceTo","lerp","damping","parallaxReturnSpeed","image","createElement","width","height","context","getContext","drawImage","imageData","getImageData","geom","PlaneGeometry","vertices","vertex","imageDataIndex","MathUtils","mapLinear","brightness","data","z","computeFlatVertexNormals","GEOMETRY","timeStarted","performance","now","edge0","edge1","clamp","growLength","Mesh","AdversaryRendering","driver","useRef","handleRef","React","useCallback","current","useEffect","setImage","ref","BuiltinTextures","ImageDropzone","onGotImage","onDrop","files","rejected","file","reader","FileReader","onabort","onerror","src","readAsDataURL","useDropzone","maxFiles","getRootProps","getInputProps","isDragActive","className","AdversariesList","onMouseOver","handleMouseOver","App","useState","showUI","setShowUI","assign","handleKeyup","code","show","handleCameraFrontalView","goFrontalView","handleCameraDiagonalView","goDiagonalView","onUpdate","path","label","step","closed","title","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26c5e9d5.chunk.js","sourcesContent":["export function glsl(literals: TemplateStringsArray, ...placeholders: string[]) {\r\n  let result = \"\";\r\n  for (let i = 0; i < placeholders.length; i++) {\r\n    result += literals[i];\r\n    result += placeholders[i];\r\n  }\r\n\r\n  result += literals[literals.length - 1];\r\n  return result;\r\n}\r\n","import { glsl } from \"./glsl\";\r\n\r\n\r\nexport const GLSL_NOISE = glsl`\r\n//\tClassic Perlin 2D Noise \r\n//\tby Stefan Gustavson\r\n//\r\nvec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\r\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\r\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\r\n\r\n\r\nfloat cnoise(vec2 P){\r\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\r\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\r\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\r\n  vec4 ix = Pi.xzxz;\r\n  vec4 iy = Pi.yyww;\r\n  vec4 fx = Pf.xzxz;\r\n  vec4 fy = Pf.yyww;\r\n  vec4 i = permute(permute(ix) + iy);\r\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\r\n  vec4 gy = abs(gx) - 0.5;\r\n  vec4 tx = floor(gx + 0.5);\r\n  gx = gx - tx;\r\n  vec2 g00 = vec2(gx.x,gy.x);\r\n  vec2 g10 = vec2(gx.y,gy.y);\r\n  vec2 g01 = vec2(gx.z,gy.z);\r\n  vec2 g11 = vec2(gx.w,gy.w);\r\n  vec4 norm = 1.79284291400159 - 0.85373472095314 * \r\n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\r\n  g00 *= norm.x;\r\n  g01 *= norm.y;\r\n  g10 *= norm.z;\r\n  g11 *= norm.w;\r\n  float n00 = dot(g00, vec2(fx.x, fy.x));\r\n  float n10 = dot(g10, vec2(fx.y, fy.y));\r\n  float n01 = dot(g01, vec2(fx.z, fy.z));\r\n  float n11 = dot(g11, vec2(fx.w, fy.w));\r\n  vec2 fade_xy = fade(Pf.xy);\r\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\r\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\r\n  return 2.3 * n_xy;\r\n}\r\n`;\r\n","import {\r\n  Color,\r\n\r\n  ShaderMaterial,\r\n  Texture,\r\n  WebGLRenderer,\r\n  WebGLRenderTarget\r\n} from \"three\";\r\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass\";\r\nimport { GUIState } from \"./App\";\r\nimport { glsl } from \"./glsl\";\r\n\r\nexport class GradientEffect {\r\n  public get texture() {\r\n    return this.target.texture;\r\n  }\r\n\r\n  target: WebGLRenderTarget;\r\n  private fsQuad: Pass.FullScreenQuad;\r\n  public readonly material: GradientShaderMaterial;\r\n\r\n  constructor(public source: Texture, state: GUIState, public maxBrightness: number, public minBrightness: number) {\r\n    this.target = new WebGLRenderTarget(\r\n      2048,\r\n      2048,\r\n    );\r\n    this.material = new GradientShaderMaterial(source, state, maxBrightness, minBrightness);\r\n    this.fsQuad = new Pass.FullScreenQuad(this.material);\r\n  }\r\n\r\n  setTextureBase(textureBase: Texture) {\r\n    this.source = textureBase;\r\n    this.material.uniforms.tSource.value = this.source;\r\n    this.material.needsUpdate = true;\r\n  }\r\n\r\n  public render(renderer: WebGLRenderer) {\r\n    renderer.setRenderTarget(this.target);\r\n    this.fsQuad.render(renderer);\r\n    renderer.setRenderTarget(null);\r\n  }\r\n}\r\n\r\nclass GradientShaderMaterial extends ShaderMaterial {\r\n  constructor(source: Texture, state: GUIState, maxBrightness: number, minBrightness: number) {\r\n    super({\r\n      uniforms: {\r\n        tSource: { value: source },\r\n        gradient: { value: (new Array(10).fill(0).map(() => new Color())) },\r\n        gradientLength: { value: 0 },\r\n        transparency: { value: true },\r\n        enabled: { value: true },\r\n        maxBrightness: { value: maxBrightness },\r\n        minBrightness: { value: minBrightness },\r\n      },\r\n      vertexShader: vertexShader,\r\n      fragmentShader: fragmentShader,\r\n      transparent: true,\r\n    });\r\n    console.log(minBrightness, maxBrightness);\r\n    this.update(state);\r\n    this.needsUpdate = true;\r\n  }\r\n\r\n  update(state: GUIState) {\r\n    const gradientColors = state.gradient.split(\" \").map((x) => new Color(x));\r\n    const gradientLength = gradientColors.length;\r\n    gradientColors.forEach((color, index) => {\r\n      this.uniforms.gradient.value[index] = color;\r\n    });\r\n    this.uniforms.gradientLength.value = gradientLength;\r\n    this.uniforms.transparency.value = state.gradientTransparency;\r\n    this.uniforms.enabled.value = state.gradientEnabled;\r\n    this.needsUpdate = true;\r\n  }\r\n}\r\n\r\nconst vertexShader = glsl`\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n`;\r\nconst fragmentShader = glsl`\r\nuniform sampler2D tSource;\r\nuniform vec3[10] gradient;\r\nuniform int gradientLength;\r\nuniform bool transparency;\r\nuniform bool enabled;\r\nuniform float maxBrightness;\r\nuniform float minBrightness;\r\n\r\nvarying vec2 vUv;\r\n\r\nvec4 getGradientColor(float t) {\r\n  float tOnGradient = t * float(gradientLength);\r\n  int lowStop = int(tOnGradient);\r\n  int highStop = int(tOnGradient) + 1;\r\n  float lerpAmount = tOnGradient - float(lowStop);\r\n\r\n  vec3 colorLow = gradient[lowStop];\r\n  vec3 colorHigh = gradient[highStop];\r\n\r\n  float alpha = 1.0;\r\n  if (transparency && lowStop == 0) {\r\n    alpha = lerpAmount;\r\n  }\r\n\r\n  return vec4(mix(colorLow, colorHigh, lerpAmount), alpha);\r\n}\r\n\r\nvoid main() {\r\n  vec4 baseColor = texture2D( tSource, vUv );\r\n\r\n  if (enabled) {\r\n    float brightness = dot(baseColor.rgb, vec3(0.299, 0.587, 0.114));\r\n    float normalizedBrightness = smoothstep(minBrightness, maxBrightness, brightness);\r\n\r\n    vec4 outColor = getGradientColor(normalizedBrightness);\r\n\r\n    gl_FragColor = outColor;\r\n  } else {\r\n    gl_FragColor = baseColor;\r\n  }\r\n}\r\n`;\r\n","import { DoubleSide, ShaderMaterial, Texture } from \"three\";\r\nimport { DRIVER } from \"./AdversaryRendering\";\r\nimport { GUIState, STATE } from \"./App\";\r\nimport { glsl } from \"./glsl\";\r\nimport { GLSL_NOISE } from \"./GLSL_NOISE\";\r\nimport { GradientEffect } from \"./GradientEffect\";\r\n\r\nexport class AdversaryMaterial extends ShaderMaterial {\r\n  \r\n  public textureCache: Record<string, Texture> = {};\r\n  private activeTexture: string = \"Buffalo\";\r\n\r\n  constructor(\r\n    public baseTexture: Texture,\r\n    // in [0 to 1]\r\n    public minBrightness: number,\r\n    public maxBrightness: number,\r\n    public gradientEffect: GradientEffect\r\n  ) {\r\n    super({\r\n      uniforms: {\r\n        breatheWaviness: { value: 2.2 },\r\n        breatheSpeed: { value: 1.0 },\r\n        breatheWholeBodyMovement: { value: 2.0 },\r\n        breatheTallPointExaggeration: { value: 20 },\r\n        breatheNoiseSpeed: { value: 0.2 },\r\n        breatheNoiseAmount: { value: 4 },\r\n        breatheZAmount: { value: 0 },\r\n        breatheXYAmount: { value: 1 },\r\n\r\n        time: { value: 0 },\r\n\r\n        // used for heightmap\r\n        displacementScale: { value: 0 },\r\n\r\n        // used for heightmap\r\n        baseTexture: { value: baseTexture },\r\n\r\n        // only used for coloring\r\n        map: { value: null },\r\n      },\r\n      fragmentShader,\r\n      vertexShader,\r\n      side: DoubleSide,\r\n      transparent: true,\r\n    });\r\n    this.updateMap();\r\n  }\r\n\r\n  setTextureBase(textureBase: Texture) {\r\n    this.baseTexture = textureBase;\r\n    this.gradientEffect.setTextureBase(textureBase);\r\n    this.uniforms.baseTexture.value = this.baseTexture;\r\n    this.needsUpdate = true;\r\n  }\r\n\r\n  private updateMap() {\r\n    if (STATE.gradientEnabled) {\r\n      this.uniforms.map.value = this.gradientEffect.texture;\r\n    } else {\r\n      this.uniforms.map.value = this.baseTexture;\r\n    }\r\n    this.needsUpdate = true;\r\n  }\r\n\r\n  public setState(state: GUIState) {\r\n    this.updateMap();\r\n\r\n    this.uniforms.breatheWaviness.value = state.breatheWaviness;\r\n    this.uniforms.breatheSpeed.value = state.breatheSpeed;\r\n    this.uniforms.breatheWholeBodyMovement.value = state.breatheWholeBodyMovement;\r\n    this.uniforms.breatheTallPointExaggeration.value = state.breatheTallPointExaggeration;\r\n    this.uniforms.breatheNoiseSpeed.value = state.breatheNoiseSpeed;\r\n    this.uniforms.breatheNoiseAmount.value = state.breatheNoiseAmount;\r\n    this.uniforms.breatheZAmount.value = state.breatheZAmount;\r\n    this.uniforms.breatheXYAmount.value = state.breatheXYAmount;\r\n  }\r\n\r\n  animate(zScale: number, time: number) {\r\n    this.uniforms.time.value = time;\r\n    this.uniforms.displacementScale.value = zScale;\r\n    this.gradientEffect.material.update(STATE);\r\n    this.gradientEffect.render(DRIVER.renderer);\r\n    this.needsUpdate = true;\r\n  }\r\n\r\n  static create(state: GUIState) {\r\n    const textureBase: Texture = null!;\r\n    const minBrightness = 0;\r\n    const maxBrightness = 0.9;\r\n    const gradientEffect = new GradientEffect(\r\n      textureBase,\r\n      state,\r\n      maxBrightness,\r\n      minBrightness\r\n    );\r\n    return new AdversaryMaterial(\r\n      textureBase,\r\n      minBrightness,\r\n      maxBrightness,\r\n      gradientEffect\r\n    );\r\n  }\r\n}\r\n\r\nconst vertexShader = glsl`\r\nuniform float displacementScale;\r\nuniform sampler2D baseTexture;\r\nuniform float time;\r\n\r\nuniform float breatheWaviness; // 2.2\r\nuniform float breatheSpeed; // 1.0\r\nuniform float breatheWholeBodyMovement; // 2.0\r\nuniform float breatheTallPointExaggeration; // 20\r\nuniform float breatheNoiseSpeed; // 0.2\r\nuniform float breatheNoiseAmount; // 4\r\nuniform float breatheZAmount; // [-1, 1]\r\nuniform float breatheXYAmount; // [-1, 1]\r\n\r\nvarying vec2 vUv;\r\n\r\n${GLSL_NOISE}\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n\r\n  vec4 baseColor = texture2D( baseTexture, vUv );\r\n  float brightness = dot(baseColor.rgb, vec3(0.299, 0.587, 0.114));\r\n\r\n  vec3 transformed = position;\r\n\r\n  vec2 offset = vec2(0., 0.);\r\n\r\n  float t = time + (1.0 + length(transformed.xy)) / 100.0 * breatheWaviness;\r\n  t *= breatheSpeed;\r\n\r\n  // make the entire thing expand and shrink\r\n  offset += transformed.xy / 100.0 * (1.0 + sin(t)) * breatheWholeBodyMovement;\r\n\r\n  // make taller points expand/shrink more\r\n  offset += transformed.xy / 100.0 * (1.0 + sin(t)) * breatheTallPointExaggeration * brightness * brightness;\r\n\r\n  // add some flow noise to the taller points\r\n  float noiseTime = t * breatheNoiseSpeed;\r\n  offset += vec2(\r\n    cnoise(uv * 0.5 + vec2(noiseTime, 0)),\r\n    cnoise(uv * 0.5 + vec2(91.3 - noiseTime, -123.2 + noiseTime))\r\n  ) * breatheNoiseAmount * brightness;\r\n\r\n  float dz = displacementScale * brightness;\r\n  transformed.z += mix(dz, dz * length(offset) / 20., breatheZAmount);\r\n  transformed.xy += offset * breatheXYAmount;\r\n\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(transformed, 1.0);\r\n}\r\n`;\r\n\r\nconst fragmentShader = glsl`\r\nvarying vec2 vUv;\r\nuniform sampler2D map;\r\n\r\nvoid main() {\r\n  gl_FragColor = texture2D( map, vUv );\r\n}\r\n`;","import {\r\n\tEventDispatcher,\r\n\tMOUSE,\r\n\tQuaternion,\r\n\tSpherical,\r\n\tTOUCH,\r\n\tVector2,\r\n\tVector3\r\n} from \"three\";\r\n\r\n// This set of controls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n//\r\n//    Orbit - left mouse / touch: one-finger move\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\r\n\r\nvar OrbitControls = function ( object, domElement ) {\r\n\r\n\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\r\n\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\r\n\r\n\tthis.object = object;\r\n\tthis.domElement = domElement;\r\n\r\n\t// Set to false to disable this control\r\n\tthis.enabled = true;\r\n\r\n\t// \"target\" sets the location of focus, where the object orbits around\r\n\tthis.target = new Vector3();\r\n\r\n\t// How far you can dolly in and out ( PerspectiveCamera only )\r\n\tthis.minDistance = 0;\r\n\tthis.maxDistance = Infinity;\r\n\r\n\t// How far you can zoom in and out ( OrthographicCamera only )\r\n\tthis.minZoom = 0;\r\n\tthis.maxZoom = Infinity;\r\n\r\n\t// How far you can orbit vertically, upper and lower limits.\r\n\t// Range is 0 to Math.PI radians.\r\n\tthis.minPolarAngle = 0; // radians\r\n\tthis.maxPolarAngle = Math.PI; // radians\r\n\r\n\t// How far you can orbit horizontally, upper and lower limits.\r\n\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\r\n\tthis.minAzimuthAngle = - Infinity; // radians\r\n\tthis.maxAzimuthAngle = Infinity; // radians\r\n\r\n\t// Set to true to enable damping (inertia)\r\n\t// If damping is enabled, you must call controls.update() in your animation loop\r\n\tthis.enableDamping = false;\r\n\tthis.dampingFactor = 0.05;\r\n\r\n\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n\t// Set to false to disable zooming\r\n\tthis.enableZoom = true;\r\n\tthis.zoomSpeed = 1.0;\r\n\r\n\t// Set to false to disable rotating\r\n\tthis.enableRotate = true;\r\n\tthis.rotateSpeed = 1.0;\r\n\r\n\t// Set to false to disable panning\r\n\tthis.enablePan = true;\r\n\tthis.panSpeed = 1.0;\r\n\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\r\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\r\n\r\n\t// Set to true to automatically rotate around the target\r\n\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n\tthis.autoRotate = false;\r\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\r\n\r\n\t// Set to false to disable use of the keys\r\n\tthis.enableKeys = true;\r\n\r\n\t// The four arrow keys\r\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\r\n\r\n\t// Mouse buttons\r\n\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\r\n\r\n\t// Touch fingers\r\n\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\r\n\r\n\t// for reset\r\n\tthis.target0 = this.target.clone();\r\n\tthis.position0 = this.object.position.clone();\r\n\tthis.zoom0 = this.object.zoom;\r\n\r\n\t//\r\n\t// public methods\r\n\t//\r\n\r\n\tthis.getPolarAngle = function () {\r\n\r\n\t\treturn spherical.phi;\r\n\r\n\t};\r\n\r\n\tthis.getAzimuthalAngle = function () {\r\n\r\n\t\treturn spherical.theta;\r\n\r\n\t};\r\n\r\n\tthis.saveState = function () {\r\n\r\n\t\tscope.target0.copy( scope.target );\r\n\t\tscope.position0.copy( scope.object.position );\r\n\t\tscope.zoom0 = scope.object.zoom;\r\n\t};\r\n\r\n\tthis.getState = function() {\r\n\t\treturn {\r\n\t\t\ttarget0: scope.target0.clone(),\r\n\t\t\tposition0: scope.position0.clone(),\r\n\t\t\tzoom0: scope.zoom0,\r\n\t\t}\r\n\t}\r\n\r\n\tthis.loadState = function (state) {\r\n\t\tscope.target.copy( state.target0 );\r\n\t\tscope.object.position.copy( state.position0 );\r\n\t\tscope.object.zoom = state.zoom0;\r\n\r\n\t\tscope.object.updateProjectionMatrix();\r\n\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\tscope.update();\r\n\t}\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tscope.target.copy( scope.target0 );\r\n\t\tscope.object.position.copy( scope.position0 );\r\n\t\tscope.object.zoom = scope.zoom0;\r\n\r\n\t\tscope.object.updateProjectionMatrix();\r\n\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\tscope.update();\r\n\r\n\t\tstate = STATE.NONE;\r\n\r\n\t};\r\n\r\n\t// this method is exposed, but perhaps it would be better if we can make it private...\r\n\tthis.update = function () {\r\n\r\n\t\tvar offset = new Vector3();\r\n\r\n\t\t// so camera.up is the orbit axis\r\n\t\tvar quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\r\n\t\tvar quatInverse = quat.clone().inverse();\r\n\r\n\t\tvar lastPosition = new Vector3();\r\n\t\tvar lastQuaternion = new Quaternion();\r\n\r\n\t\tvar twoPI = 2 * Math.PI;\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\tvar position = scope.object.position;\r\n\r\n\t\t\toffset.copy( position ).sub( scope.target );\r\n\r\n\t\t\t// rotate offset to \"y-axis-is-up\" space\r\n\t\t\toffset.applyQuaternion( quat );\r\n\r\n\t\t\t// angle from z-axis around y-axis\r\n\t\t\tspherical.setFromVector3( offset );\r\n\r\n\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\r\n\r\n\t\t\t\trotateLeft( getAutoRotationAngle() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scope.enableDamping ) {\r\n\r\n\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\r\n\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tspherical.theta += sphericalDelta.theta;\r\n\t\t\t\tspherical.phi += sphericalDelta.phi;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// restrict theta to be between desired limits\r\n\r\n\t\t\tvar min = scope.minAzimuthAngle;\r\n\t\t\tvar max = scope.maxAzimuthAngle;\r\n\r\n\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\r\n\r\n\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\r\n\r\n\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\r\n\r\n\t\t\t\tif ( min <= max ) {\r\n\r\n\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\r\n\t\t\t\t\t\tMath.max( min, spherical.theta ) :\r\n\t\t\t\t\t\tMath.min( max, spherical.theta );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// restrict phi to be between desired limits\r\n\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\r\n\r\n\t\t\tspherical.makeSafe();\r\n\r\n\r\n\t\t\tspherical.radius *= scale;\r\n\r\n\t\t\t// restrict radius to be between desired limits\r\n\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\r\n\r\n\t\t\t// move target to panned location\r\n\r\n\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tscope.target.add( panOffset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset.setFromSpherical( spherical );\r\n\r\n\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\r\n\t\t\toffset.applyQuaternion( quatInverse );\r\n\r\n\t\t\tposition.copy( scope.target ).add( offset );\r\n\r\n\t\t\tscope.object.lookAt( scope.target );\r\n\r\n\t\t\tif ( scope.enableDamping === true ) {\r\n\r\n\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\r\n\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\r\n\r\n\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsphericalDelta.set( 0, 0, 0 );\r\n\r\n\t\t\t\tpanOffset.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscale = 1;\r\n\r\n\t\t\t// update condition is:\r\n\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\r\n\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n\t\t\tif ( zoomChanged ||\r\n\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\r\n\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\r\n\r\n\t\t\t\tscope.dispatchEvent( changeEvent );\r\n\r\n\t\t\t\tlastPosition.copy( scope.object.position );\r\n\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\r\n\t\t\t\tzoomChanged = false;\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\tthis.dispose = function () {\r\n\r\n\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\r\n\r\n\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown, false );\r\n\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\r\n\r\n\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\r\n\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\r\n\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\r\n\r\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\r\n\r\n\t\tscope.domElement.removeEventListener( 'keydown', onKeyDown, false );\r\n\r\n\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n\r\n\t};\r\n\r\n\t//\r\n\t// internals\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tvar changeEvent = { type: 'change' };\r\n\tvar startEvent = { type: 'start' };\r\n\tvar endEvent = { type: 'end' };\r\n\r\n\tvar STATE = {\r\n\t\tNONE: - 1,\r\n\t\tROTATE: 0,\r\n\t\tDOLLY: 1,\r\n\t\tPAN: 2,\r\n\t\tTOUCH_ROTATE: 3,\r\n\t\tTOUCH_PAN: 4,\r\n\t\tTOUCH_DOLLY_PAN: 5,\r\n\t\tTOUCH_DOLLY_ROTATE: 6\r\n\t};\r\n\r\n\tvar state = STATE.NONE;\r\n\r\n\tvar EPS = 0.000001;\r\n\r\n\t// current position in spherical coordinates\r\n\tvar spherical = new Spherical();\r\n\tscope.spherical = spherical;\r\n\tvar sphericalDelta = new Spherical();\r\n\r\n\tvar scale = 1;\r\n\tvar panOffset = new Vector3();\r\n\tvar zoomChanged = false;\r\n\r\n\tvar rotateStart = new Vector2();\r\n\tvar rotateEnd = new Vector2();\r\n\tvar rotateDelta = new Vector2();\r\n\r\n\tvar panStart = new Vector2();\r\n\tvar panEnd = new Vector2();\r\n\tvar panDelta = new Vector2();\r\n\r\n\tvar dollyStart = new Vector2();\r\n\tvar dollyEnd = new Vector2();\r\n\tvar dollyDelta = new Vector2();\r\n\r\n\tfunction getAutoRotationAngle() {\r\n\r\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\r\n\r\n\t}\r\n\r\n\tfunction getZoomScale() {\r\n\r\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\r\n\r\n\t}\r\n\r\n\tfunction rotateLeft( angle ) {\r\n\r\n\t\tsphericalDelta.theta -= angle;\r\n\r\n\t}\r\n\r\n\tscope.rotateLeft = rotateLeft;\r\n\r\n\tfunction rotateUp( angle ) {\r\n\r\n\t\tsphericalDelta.phi -= angle;\r\n\r\n\t}\r\n\r\n\tscope.rotateUp = rotateUp;\r\n\r\n\tvar panLeft = function () {\r\n\r\n\t\tvar v = new Vector3();\r\n\r\n\t\treturn function panLeft( distance, objectMatrix ) {\r\n\r\n\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\r\n\t\t\tv.multiplyScalar( - distance );\r\n\r\n\t\t\tpanOffset.add( v );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\tvar panUp = function () {\r\n\r\n\t\tvar v = new Vector3();\r\n\r\n\t\treturn function panUp( distance, objectMatrix ) {\r\n\r\n\t\t\tif ( scope.screenSpacePanning === true ) {\r\n\r\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\r\n\t\t\t\tv.crossVectors( scope.object.up, v );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv.multiplyScalar( distance );\r\n\r\n\t\t\tpanOffset.add( v );\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\t// deltaX and deltaY are in pixels; right and down are positive\r\n\tvar pan = function () {\r\n\r\n\t\tvar offset = new Vector3();\r\n\r\n\t\treturn function pan( deltaX, deltaY ) {\r\n\r\n\t\t\tvar element = scope.domElement;\r\n\r\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\t\t// perspective\r\n\t\t\t\tvar position = scope.object.position;\r\n\t\t\t\toffset.copy( position ).sub( scope.target );\r\n\t\t\t\tvar targetDistance = offset.length();\r\n\r\n\t\t\t\t// half of the fov is center to top of screen\r\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\r\n\r\n\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\r\n\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\r\n\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\t\t// orthographic\r\n\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\r\n\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// camera neither orthographic nor perspective\r\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\r\n\t\t\t\tscope.enablePan = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}();\r\n\r\n\tfunction dollyOut( dollyScale ) {\r\n\r\n\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\tscale /= dollyScale;\r\n\r\n\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\r\n\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\tzoomChanged = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\tscope.enableZoom = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction dollyIn( dollyScale ) {\r\n\r\n\t\tif ( scope.object.isPerspectiveCamera ) {\r\n\r\n\t\t\tscale *= dollyScale;\r\n\r\n\t\t} else if ( scope.object.isOrthographicCamera ) {\r\n\r\n\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\r\n\t\t\tscope.object.updateProjectionMatrix();\r\n\t\t\tzoomChanged = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\r\n\t\t\tscope.enableZoom = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\t// event callbacks - update the object state\r\n\t//\r\n\r\n\tfunction handleMouseDownRotate( event ) {\r\n\r\n\t\trotateStart.set( event.clientX, event.clientY );\r\n\r\n\t}\r\n\r\n\tfunction handleMouseDownDolly( event ) {\r\n\r\n\t\tdollyStart.set( event.clientX, event.clientY );\r\n\r\n\t}\r\n\r\n\tfunction handleMouseDownPan( event ) {\r\n\r\n\t\tpanStart.set( event.clientX, event.clientY );\r\n\r\n\t}\r\n\r\n\tfunction handleMouseMoveRotate( event ) {\r\n\r\n\t\trotateEnd.set( event.clientX, event.clientY );\r\n\r\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\tvar element = scope.domElement;\r\n\r\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\trotateStart.copy( rotateEnd );\r\n\r\n\t\tscope.update();\r\n\r\n\t}\r\n\r\n\tfunction handleMouseMoveDolly( event ) {\r\n\r\n\t\tdollyEnd.set( event.clientX, event.clientY );\r\n\r\n\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\r\n\r\n\t\tif ( dollyDelta.y > 0 ) {\r\n\r\n\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t} else if ( dollyDelta.y < 0 ) {\r\n\r\n\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t}\r\n\r\n\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t\tscope.update();\r\n\r\n\t}\r\n\r\n\tfunction handleMouseMovePan( event ) {\r\n\r\n\t\tpanEnd.set( event.clientX, event.clientY );\r\n\r\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\tpanStart.copy( panEnd );\r\n\r\n\t\tscope.update();\r\n\r\n\t}\r\n\r\n\tfunction handleMouseUp( /*event*/ ) {\r\n\r\n\t\t// no-op\r\n\r\n\t}\r\n\r\n\tfunction handleMouseWheel( event ) {\r\n\r\n\t\tif ( event.deltaY < 0 ) {\r\n\r\n\t\t\tdollyIn( getZoomScale() );\r\n\r\n\t\t} else if ( event.deltaY > 0 ) {\r\n\r\n\t\t\tdollyOut( getZoomScale() );\r\n\r\n\t\t}\r\n\r\n\t\tscope.update();\r\n\r\n\t}\r\n\r\n\tfunction handleKeyDown( event ) {\r\n\r\n\t\tvar needsUpdate = false;\r\n\r\n\t\tswitch ( event.keyCode ) {\r\n\r\n\t\t\tcase scope.keys.UP:\r\n\t\t\t\tpan( 0, scope.keyPanSpeed );\r\n\t\t\t\tneedsUpdate = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase scope.keys.BOTTOM:\r\n\t\t\t\tpan( 0, - scope.keyPanSpeed );\r\n\t\t\t\tneedsUpdate = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase scope.keys.LEFT:\r\n\t\t\t\tpan( scope.keyPanSpeed, 0 );\r\n\t\t\t\tneedsUpdate = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase scope.keys.RIGHT:\r\n\t\t\t\tpan( - scope.keyPanSpeed, 0 );\r\n\t\t\t\tneedsUpdate = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t// prevent the browser from scrolling on cursor keys\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tscope.update();\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartRotate( event ) {\r\n\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\r\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\r\n\r\n\t\t\trotateStart.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartPan( event ) {\r\n\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\r\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\r\n\r\n\t\t\tpanStart.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartDolly( event ) {\r\n\r\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\r\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\r\n\r\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\tdollyStart.set( 0, distance );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartDollyPan( event ) {\r\n\r\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\r\n\r\n\t\tif ( scope.enablePan ) handleTouchStartPan( event );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchStartDollyRotate( event ) {\r\n\r\n\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\r\n\r\n\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMoveRotate( event ) {\r\n\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\r\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\r\n\r\n\t\t\trotateEnd.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\r\n\r\n\t\tvar element = scope.domElement;\r\n\r\n\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\r\n\r\n\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\r\n\r\n\t\trotateStart.copy( rotateEnd );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMovePan( event ) {\r\n\r\n\t\tif ( event.touches.length == 1 ) {\r\n\r\n\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\r\n\t\t\tvar y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\r\n\r\n\t\t\tpanEnd.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\r\n\r\n\t\tpan( panDelta.x, panDelta.y );\r\n\r\n\t\tpanStart.copy( panEnd );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMoveDolly( event ) {\r\n\r\n\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\r\n\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\r\n\r\n\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\r\n\r\n\t\tdollyEnd.set( 0, distance );\r\n\r\n\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\r\n\r\n\t\tdollyOut( dollyDelta.y );\r\n\r\n\t\tdollyStart.copy( dollyEnd );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMoveDollyPan( event ) {\r\n\r\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\tif ( scope.enablePan ) handleTouchMovePan( event );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchMoveDollyRotate( event ) {\r\n\r\n\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\r\n\r\n\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\r\n\r\n\t}\r\n\r\n\tfunction handleTouchEnd( /*event*/ ) {\r\n\r\n\t\t// no-op\r\n\r\n\t}\r\n\r\n\t//\r\n\t// event handlers - FSM: listen for events and reset state\r\n\t//\r\n\r\n\tfunction onPointerDown( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tonMouseDown( event );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// TODO touch\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onPointerMove( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tonMouseMove( event );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// TODO touch\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onPointerUp( event ) {\r\n\r\n\t\tswitch ( event.pointerType ) {\r\n\r\n\t\t\tcase 'mouse':\r\n\t\t\tcase 'pen':\r\n\t\t\t\tonMouseUp( event );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// TODO touch\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onMouseDown( event ) {\r\n\r\n\t\t// Prevent the browser from scrolling.\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// Manually set the focus since calling preventDefault above\r\n\t\t// prevents the browser from setting it automatically.\r\n\r\n\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\r\n\r\n\t\tvar mouseAction;\r\n\r\n\t\tswitch ( event.button ) {\r\n\r\n\t\t\tcase 0:\r\n\r\n\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\r\n\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tmouseAction = - 1;\r\n\r\n\t\t}\r\n\r\n\t\tswitch ( mouseAction ) {\r\n\r\n\t\t\tcase MOUSE.DOLLY:\r\n\r\n\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\thandleMouseDownDolly( event );\r\n\r\n\t\t\t\tstate = STATE.DOLLY;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase MOUSE.ROTATE:\r\n\r\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase MOUSE.PAN:\r\n\r\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\r\n\r\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownRotate( event );\r\n\r\n\t\t\t\t\tstate = STATE.ROTATE;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\thandleMouseDownPan( event );\r\n\r\n\t\t\t\t\tstate = STATE.PAN;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove, false );\r\n\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp, false );\r\n\r\n\t\t\tscope.dispatchEvent( startEvent );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onMouseMove( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tswitch ( state ) {\r\n\r\n\t\t\tcase STATE.ROTATE:\r\n\r\n\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\thandleMouseMoveRotate( event );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.DOLLY:\r\n\r\n\t\t\t\tif ( scope.enableZoom === false ) return;\r\n\r\n\t\t\t\thandleMouseMoveDolly( event );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.PAN:\r\n\r\n\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\thandleMouseMovePan( event );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onMouseUp( event ) {\r\n\r\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove, false );\r\n\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp, false );\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\thandleMouseUp( event );\r\n\r\n\t\tscope.dispatchEvent( endEvent );\r\n\r\n\t\tstate = STATE.NONE;\r\n\r\n\t}\r\n\r\n\tfunction onMouseWheel( event ) {\r\n\r\n\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\r\n\r\n\t\tevent.preventDefault();\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tscope.dispatchEvent( startEvent );\r\n\r\n\t\thandleMouseWheel( event );\r\n\r\n\t\tscope.dispatchEvent( endEvent );\r\n\r\n\t}\r\n\r\n\tfunction onKeyDown( event ) {\r\n\r\n\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\r\n\r\n\t\thandleKeyDown( event );\r\n\r\n\t}\r\n\r\n\tfunction onTouchStart( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tevent.preventDefault(); // prevent scrolling\r\n\r\n\t\tswitch ( event.touches.length ) {\r\n\r\n\t\t\tcase 1:\r\n\r\n\t\t\t\tswitch ( scope.touches.ONE ) {\r\n\r\n\t\t\t\t\tcase TOUCH.ROTATE:\r\n\r\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleTouchStartRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase TOUCH.PAN:\r\n\r\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleTouchStartPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 2:\r\n\r\n\t\t\t\tswitch ( scope.touches.TWO ) {\r\n\r\n\t\t\t\t\tcase TOUCH.DOLLY_PAN:\r\n\r\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\t\t\thandleTouchStartDollyPan( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\r\n\r\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\t\t\thandleTouchStartDollyRotate( event );\r\n\r\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t\tif ( state !== STATE.NONE ) {\r\n\r\n\t\t\tscope.dispatchEvent( startEvent );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onTouchMove( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tevent.preventDefault(); // prevent scrolling\r\n\t\tevent.stopPropagation();\r\n\r\n\t\tswitch ( state ) {\r\n\r\n\t\t\tcase STATE.TOUCH_ROTATE:\r\n\r\n\t\t\t\tif ( scope.enableRotate === false ) return;\r\n\r\n\t\t\t\thandleTouchMoveRotate( event );\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.TOUCH_PAN:\r\n\r\n\t\t\t\tif ( scope.enablePan === false ) return;\r\n\r\n\t\t\t\thandleTouchMovePan( event );\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.TOUCH_DOLLY_PAN:\r\n\r\n\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\r\n\r\n\t\t\t\thandleTouchMoveDollyPan( event );\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\r\n\r\n\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\r\n\r\n\t\t\t\thandleTouchMoveDollyRotate( event );\r\n\r\n\t\t\t\tscope.update();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tstate = STATE.NONE;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onTouchEnd( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\thandleTouchEnd( event );\r\n\r\n\t\tscope.dispatchEvent( endEvent );\r\n\r\n\t\tstate = STATE.NONE;\r\n\r\n\t}\r\n\r\n\tfunction onContextMenu( event ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\r\n\r\n\tscope.domElement.addEventListener( 'pointerdown', onPointerDown, false );\r\n\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\r\n\r\n\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\r\n\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\r\n\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\r\n\r\n\tscope.domElement.addEventListener( 'keydown', onKeyDown, false );\r\n\r\n\t// force an update at start\r\n\r\n\tthis.update();\r\n};\r\n\r\nOrbitControls.prototype = Object.create( EventDispatcher.prototype );\r\nOrbitControls.prototype.constructor = OrbitControls;\r\n\r\n\r\n// This set of controls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n// This is very similar to OrbitControls, another set of touch behavior\r\n//\r\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - left mouse, or arrow keys / touch: one-finger move\r\n\r\nvar MapControls = function ( object, domElement ) {\r\n\r\n\tOrbitControls.call( this, object, domElement );\r\n\r\n\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\r\n\r\n\tthis.mouseButtons.LEFT = MOUSE.PAN;\r\n\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\r\n\r\n\tthis.touches.ONE = TOUCH.PAN;\r\n\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\r\n\r\n};\r\n\r\nMapControls.prototype = Object.create( EventDispatcher.prototype );\r\nMapControls.prototype.constructor = MapControls;\r\n\r\nexport { OrbitControls, MapControls };\r\n\r\n","import {\r\n  AmbientLight,\r\n  Color,\r\n  Euler,\r\n  MathUtils,\r\n  Mesh,\r\n\r\n  OrthographicCamera,\r\n  PlaneGeometry,\r\n  Scene,\r\n  Spherical,\r\n  Texture,\r\n  TextureLoader,\r\n  Vector2,\r\n  Vector3,\r\n  WebGLRenderer\r\n} from \"three\";\r\nimport { EffectComposer } from \"three/examples/jsm/postprocessing/EffectComposer\";\r\nimport { FilmPass } from \"three/examples/jsm/postprocessing/FilmPass\";\r\nimport { RenderPass } from \"three/examples/jsm/postprocessing/RenderPass\";\r\nimport { AdversaryMaterial } from \"./AdversaryMaterial\";\r\nimport { GUIState, STATE } from \"./App\";\r\nimport { OrbitControls } from \"./OrbitControls\";\r\nimport { smoothstep } from \"./smoothstep\";\r\n\r\nexport class AdversaryDriver {\r\n  public renderer: WebGLRenderer;\r\n  public scene: Scene;\r\n  public camera: OrthographicCamera;\r\n  controls: OrbitControls;\r\n  adversary: AdversaryMesh;\r\n  composer: EffectComposer;\r\n  filmPass: FilmPass;\r\n  // normalized in [-1, 1]\r\n  mouse = new Vector2();\r\n  spherical0: Spherical;\r\n\r\n  constructor(public canvas: HTMLCanvasElement, private state: GUIState) {\r\n    this.renderer = new WebGLRenderer({ canvas });\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    this.scene = new Scene();\r\n\r\n    // frustrum will be set by handleWindowResize\r\n    this.camera = new OrthographicCamera(-1, 1, 1, -1, -9999, 9999);\r\n    this.camera.position.set(0, 0, 100);\r\n    this.camera.lookAt(0, 0, 0);\r\n\r\n    // also sets renderer initial size\r\n    this.handleWindowResize();\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n\r\n    window.addEventListener(\"mousemove\", this.handleMouseMove);\r\n\r\n    this.scene.add(new AmbientLight(0xffffff));\r\n    this.scene.background = new Color(1, 1, 1);\r\n\r\n    // this.adversary = new AdversaryMesh()\r\n    const adversaryMaterial = AdversaryMaterial.create(this.state);\r\n    this.adversary = new AdversaryMesh(adversaryMaterial);\r\n    this.scene.add(this.adversary);\r\n\r\n    this.setAdversary(\"Buffalo\");\r\n\r\n    this.controls = new OrbitControls(this.camera, this.canvas);\r\n    this.spherical0 = new Spherical();\r\n    this.spherical0.setFromVector3(this.camera.position);\r\n\r\n    this.composer = new EffectComposer(this.renderer);\r\n    this.composer.addPass(new RenderPass(this.scene, this.camera));\r\n    this.filmPass = new FilmPass(0, 0, 4096, 0);\r\n    this.composer.addPass(this.filmPass);\r\n\r\n    this.setState(state);\r\n    requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  handleMouseMove = (event: MouseEvent) => {\r\n    event.preventDefault();\r\n    const aspect = window.innerWidth / window.innerHeight;\r\n\r\n    this.mouse.x = ((event.clientX / window.innerWidth) * 2 - 1) * aspect;\r\n    this.mouse.y = (1 - event.clientY / window.innerHeight) * 2 - 1;\r\n\r\n    if (\r\n      this.state.parallaxEnabled &&\r\n      this.state.parallaxRespondsToMouseMovement\r\n    ) {\r\n      const parallaxAmount =\r\n        (((Math.PI / 4) * this.state.parallaxIntensity) / window.innerHeight) *\r\n        3;\r\n      (this.controls as any).rotateLeft(-parallaxAmount * event.movementX);\r\n      (this.controls as any).rotateUp(-parallaxAmount * event.movementY);\r\n    }\r\n  };\r\n\r\n  setImage(img: HTMLImageElement) {\r\n    const texture = new Texture(img);\r\n    img.onload = function () {\r\n      texture.needsUpdate = true;\r\n    };\r\n    this.setAdversaryTexture(texture);\r\n  }\r\n\r\n  setAdversary(name: string) {\r\n    new TextureLoader().load(\r\n      `/2005-crowdstrike-adversary/adversaries/${name}.jpg`,\r\n      (texture) => {\r\n        this.setAdversaryTexture(texture);\r\n      },\r\n      (event) => console.log(event),\r\n      (event) => console.error(event)\r\n    )\r\n  }\r\n\r\n  setState(state: GUIState) {\r\n    this.state = state;\r\n    (this.filmPass.uniforms as any).nIntensity.value = state.noiseIntensity;\r\n    (this.filmPass.uniforms as any).sIntensity.value = state.scanlineIntensity;\r\n    this.adversary.material.setState(state);\r\n    (this.scene.background as Color).set(state.background);\r\n  }\r\n\r\n  cameraTarget?: Vector3;\r\n  goDiagonalView() {\r\n    this.cameraTarget = new Vector3(0, 0, 100);\r\n    this.cameraTarget.applyEuler(new Euler(Math.PI / 6, Math.PI / 6));\r\n  }\r\n\r\n  goFrontalView() {\r\n    this.cameraTarget = new Vector3(0, 0, 100);\r\n  }\r\n\r\n  private setAdversaryTexture(textureBase: Texture) {\r\n    this.adversary.material.setTextureBase(textureBase);\r\n    this.composer.render();\r\n  }\r\n\r\n  handleWindowResize = () => {\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    const aspect = window.innerWidth / window.innerHeight;\r\n    const halfHeight = 150;\r\n    this.camera.left = -halfHeight * aspect;\r\n    this.camera.right = halfHeight * aspect;\r\n    this.camera.top = halfHeight;\r\n    this.camera.bottom = -halfHeight;\r\n    this.camera.updateProjectionMatrix();\r\n  };\r\n\r\n  animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n    if (this.cameraTarget != null) {\r\n      this.updateCameraTarget();\r\n    } else {\r\n      if (this.state.parallaxEnabled) {\r\n        this.updateCameraParallax();\r\n      }\r\n      this.controls.update();\r\n    }\r\n    this.adversary?.animate();\r\n    this.composer.render();\r\n  };\r\n\r\n  updateCameraTarget() {\r\n    if (this.cameraTarget != null) {\r\n      if (this.camera.position.distanceTo(this.cameraTarget) < 1) {\r\n        // we're done\r\n        this.camera.position.copy(this.cameraTarget);\r\n        this.camera.lookAt(0, 0, 0);\r\n        delete this.cameraTarget;\r\n      } else {\r\n        this.camera.position.lerp(this.cameraTarget, 0.1);\r\n        this.camera.lookAt(0, 0, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  private updateCameraParallax() {\r\n    const controls = this.controls as any;\r\n    if (this.state.parallaxRespondsToMouseMovement) {\r\n      // lerp towards position0\r\n      var damping = 0.1 * 2 ** (this.state.parallaxReturnSpeed - 3);\r\n      var spherical = new Spherical();\r\n      spherical.setFromVector3(this.camera.position);\r\n      controls.rotateLeft((spherical.theta - this.spherical0.theta) * damping);\r\n      controls.rotateUp((spherical.phi - this.spherical0.phi) * damping);\r\n    } else {\r\n      // reset rotation but don't reset zoom\r\n      controls.target.copy(controls.target0);\r\n      controls.object.position.copy(controls.position0);\r\n      const parallaxAmount = (Math.PI / 4) * this.state.parallaxIntensity;\r\n      controls.rotateLeft(-parallaxAmount * this.mouse.x);\r\n      controls.rotateUp(parallaxAmount * this.mouse.y);\r\n    }\r\n  }\r\n\r\n  private generateDisplacementMappedGeometry(image: HTMLImageElement) {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = image.width / 10;\r\n    canvas.height = image.height / 10;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context) {\r\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n      const { width, height } = canvas;\r\n      const imageData = context.getImageData(0, 0, width, height);\r\n      // document.body.appendChild(canvas);\r\n      // PlaneGeometry adds 1 vertex row and column, but we don't have\r\n      // imageData there, so we must shrink PlaneGeometry to accomodate\r\n      const geom = new PlaneGeometry(\r\n        width - 1,\r\n        height - 1,\r\n        width - 1,\r\n        height - 1\r\n      );\r\n      for (const vertex of geom.vertices) {\r\n        // -0.5 to line it up perfectly with the grid\r\n        const x = MathUtils.mapLinear(\r\n          vertex.x - 0.5,\r\n          -width / 2,\r\n          width / 2,\r\n          0,\r\n          width\r\n        );\r\n        /// invert the y!\r\n        const y = MathUtils.mapLinear(\r\n          vertex.y - 0.5,\r\n          height / 2,\r\n          -height / 2,\r\n          0,\r\n          height\r\n        );\r\n        const imageDataIndex = (x + width * y) * 4;\r\n        const r = imageData.data[imageDataIndex] / 255,\r\n          g = imageData.data[imageDataIndex + 1] / 255,\r\n          b = imageData.data[imageDataIndex + 2] / 255;\r\n        const brightness = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        vertex.z = brightness * 20;\r\n      }\r\n\r\n      const scale = 200 / Math.max(width, height);\r\n      geom.scale(scale, scale, 1);\r\n      geom.computeFlatVertexNormals();\r\n      return geom;\r\n    }\r\n  }\r\n}\r\n\r\nclass AdversaryMesh extends Mesh<PlaneGeometry, AdversaryMaterial> {\r\n  static GEOMETRY = new PlaneGeometry(200, 200, 512, 512);\r\n  private timeStarted = performance.now();\r\n  constructor(material: AdversaryMaterial) {\r\n    super(AdversaryMesh.GEOMETRY, material);\r\n  }\r\n\r\n  animate() {\r\n    const time = (performance.now() - this.timeStarted) / 1000;\r\n    const zScale =\r\n      (smoothstep(0, 5, time) *\r\n        STATE.growLength) /\r\n      this.material.maxBrightness;\r\n\r\n    this.material.animate(zScale, time);\r\n\r\n    this.position.z = -zScale / 2;\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { AdversaryDriver } from \"./AdversaryDriver\";\r\nimport { GUIState } from \"./App\";\r\n\r\nexport var DRIVER: AdversaryDriver;\r\n\r\nexport const AdversaryRendering = ({ img, state }: { img: HTMLImageElement | undefined; state: GUIState }) => {\r\n  const driver = useRef<AdversaryDriver>();\r\n  const handleRef = React.useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (canvas != null) {\r\n      driver.current = new AdversaryDriver(canvas, state);\r\n      DRIVER = driver.current;\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    if (driver.current != null && img != null) {\r\n      driver.current.setImage(img);\r\n    }\r\n  }, [img]);\r\n  useEffect(() => {\r\n    if (driver.current != null) {\r\n      driver.current.setState(state);\r\n    }\r\n  }, [state]);\r\n  return <canvas ref={handleRef}></canvas>;\r\n};\r\n","import { MathUtils } from \"three\";\r\n\r\n\r\nexport function smoothstep(edge0: number, edge1: number, x: number) {\r\n  // Scale, bias and saturate x to 0..1 range\r\n  x = MathUtils.clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\r\n  // Evaluate polynomial\r\n  return x * x * (3 - 2 * x);\r\n}\r\n","\r\nexport const BuiltinTextures = [\r\n  \"Buffalo\",\r\n  \"Chollima\",\r\n  \"CozyBear\",\r\n  \"DopplerSpider\",\r\n  \"MazePanda\",\r\n  \"PinchySpider\",\r\n  \"Venomous\",\r\n  \"Wicked\",\r\n  \"Carbon\",\r\n  \"Cobalt\",\r\n  \"DeadEye\",\r\n  \"HammerPanda\",\r\n  \"Mythic\",\r\n  \"Remix Kitten\",\r\n  \"Viceroy\",\r\n  \"Wizard\",\r\n];\r\n","import React, { useCallback } from \"react\";\r\nimport { DropEvent, FileRejection, useDropzone } from \"react-dropzone\";\r\n\r\nexport const ImageDropzone: React.FC<{\r\n  onGotImage: (img: HTMLImageElement) => void;\r\n}> = ({ onGotImage }) => {\r\n  const onDrop = useCallback(\r\n    (files: File[], rejected: FileRejection[], event: DropEvent) => {\r\n      files.forEach((file) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onabort = () => console.log(\"file reading was aborted\");\r\n        reader.onerror = () => console.log(\"file reading has failed\");\r\n        reader.onload = () => {\r\n          const img = document.createElement(\"img\");\r\n          img.src = reader.result as string;\r\n          onGotImage(img);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    },\r\n    [onGotImage]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    maxFiles: 1,\r\n  });\r\n\r\n  return (\r\n    <div className=\"dropzone\" {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p>Drop the files here ...</p>\r\n      ) : (\r\n        <>\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n          <p>Press <b>Z</b> to toggle the UI</p>\r\n        </>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport DatGui, {\n  DatBoolean,\n  DatButton,\n  DatColor,\n  DatFolder,\n  DatNumber,\n\n  DatString\n} from \"react-dat-gui\";\nimport \"react-dat-gui/dist/index.css\";\nimport { AdversaryRendering, DRIVER } from \"./AdversaryRendering\";\nimport \"./App.css\";\nimport { BuiltinTextures } from \"./BuiltinTextures\";\nimport { ImageDropzone } from \"./ImageDropzone\";\n\nexport interface GUIState {\n  noiseIntensity: number;\n  scanlineIntensity: number;\n  parallaxEnabled: boolean;\n  parallaxRespondsToMouseMovement: boolean;\n  parallaxReturnSpeed: number;\n  parallaxIntensity: number;\n  background: string;\n  gradient: string;\n  gradientEnabled: boolean;\n  growLength: number;\n  gradientTransparency: boolean;\n  breatheWaviness: number;\n  breatheSpeed: number;\n  breatheWholeBodyMovement: number;\n  breatheTallPointExaggeration: number;\n  breatheNoiseSpeed: number;\n  breatheNoiseAmount: number;\n  breatheZAmount: number;\n  breatheXYAmount: number;\n}\n\nexport const STATE: GUIState = {\n  background: \"#808080\",\n  growLength: 50,\n  noiseIntensity: 0.25,\n  scanlineIntensity: 0.0,\n  parallaxEnabled: false,\n  parallaxIntensity: 0.5,\n  parallaxRespondsToMouseMovement: false,\n  parallaxReturnSpeed: 3,\n  gradientEnabled: true,\n  gradient: \"#131B1D #31474D #FC0000 #ABABAB #FFFFFF\",\n  gradientTransparency: true,\n  breatheWaviness: 2.2,\n  breatheSpeed: 1.0,\n  breatheWholeBodyMovement: 2.0,\n  breatheTallPointExaggeration: 20,\n  breatheNoiseSpeed: 0.2,\n  breatheNoiseAmount: 4,\n  breatheZAmount: 0,\n  breatheXYAmount: 1,\n};\n\nfunction App() {\n  const [img, setImage] = useState<HTMLImageElement>();\n  const [state, setState] = useState<GUIState>(STATE);\n  const [showUI, setShowUI] = useState(true);\n  useEffect(() => {\n    Object.assign(STATE, state);\n  }, [state]);\n  useEffect(() => {\n    const handleKeyup = (event: KeyboardEvent) => {\n      if (event.code === \"KeyZ\") {\n        setShowUI((show) => !show);\n      }\n    };\n    window.addEventListener(\"keyup\", handleKeyup);\n    return () => {\n      window.removeEventListener(\"keyup\", handleKeyup);\n    }\n  });\n  const handleCameraFrontalView = useCallback(() => {\n    DRIVER?.goFrontalView();\n  }, []);\n  const handleCameraDiagonalView = useCallback(() => {\n    DRIVER?.goDiagonalView();\n  }, []);\n  return (\n    <div className={`App${!showUI ? \" hide-ui\" : \"\"}`}>\n      <AdversaryRendering img={img} state={state} />\n      <ImageDropzone onGotImage={setImage} />\n      <AdversariesList />\n      <DatGui data={state} onUpdate={setState}>\n        <DatColor path=\"background\" label=\"Background\" />\n        <DatNumber\n          path=\"growLength\"\n          label=\"Grow Length\"\n          min={0}\n          max={500}\n          step={5}\n        />\n        <DatFolder closed={true} title=\"Postprocessing\">\n          <DatNumber\n            path=\"noiseIntensity\"\n            label=\"Noise\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n          <DatNumber\n            path=\"scanlineIntensity\"\n            label=\"Scanlines\"\n            min={0}\n            max={1}\n            step={0.01}\n          />\n        </DatFolder>\n        <DatFolder closed={true} title=\"Parallax\">\n          <DatBoolean path=\"parallaxEnabled\" label=\"Parallax Enabled?\" />\n          <DatNumber path=\"parallaxIntensity\" label=\"Intensity\" min={0} max={2} step={0.01} />\n          <DatBoolean path=\"parallaxRespondsToMouseMovement\" label=\"Returns to 0?\" />\n          <DatNumber path=\"parallaxReturnSpeed\" label=\"Return to 0 Speed\" min={0} max={6} step={0.1} />\n        </DatFolder>\n        <DatFolder closed={true} title={\"Gradient\"}>\n          <DatBoolean path=\"gradientEnabled\" label=\"Gradient Enabled?\" />\n          <DatString path=\"gradient\" label=\"Gradient\" />\n          <DatBoolean path=\"gradientTransparency\" label=\"Transparency?\" />\n        </DatFolder>\n        <DatFolder title=\"Breathe\" closed={true}>\n            <DatNumber label=\"Z Amount\" path=\"breatheZAmount\" min={-1} max={1} step={0.01} />\n            <DatNumber label=\"XY Amount\" path=\"breatheXYAmount\" min={-1} max={1} step={0.01} />\n            <DatNumber label=\"Speed\" path=\"breatheSpeed\" min={0} max={5} step={0.01} />\n            <DatNumber label=\"Tall Point Exaggeration\" path=\"breatheTallPointExaggeration\" min={-100} max={100} step={1} />\n            <DatNumber label=\"Waviness\" path=\"breatheWaviness\" min={0} max={15} step={0.1} />\n            <DatNumber label=\"Whole Body Motion\" path=\"breatheWholeBodyMovement\" min={-20} max={20} step={0.01} />\n            <DatNumber label=\"Noise Speed\" path=\"breatheNoiseSpeed\" min={0} max={2} step={0.01} />\n            <DatNumber label=\"Noise Amount\" path=\"breatheNoiseAmount\" min={0} max={10} step={0.01} />\n        </DatFolder>\n        <DatButton label=\"Go to Frontal View\" onClick={handleCameraFrontalView} />\n        <DatButton label=\"Go to Diagonal View\" onClick={handleCameraDiagonalView} />\n      </DatGui>\n    </div>\n  );\n}\n\nconst AdversariesList = () => {\n  const handleMouseOver = (name: string) => {\n    DRIVER.setAdversary(name);\n  };\n  return (\n    <div className=\"adversaries-list\">\n      { BuiltinTextures.map((name) => {\n        return <h1 onMouseOver={() => handleMouseOver(name)}>{name}</h1>\n      })}\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}