{"version":3,"sources":["AdversaryDriver.tsx","smoothstep.tsx","AdversaryRendering.tsx","ImageDropzone.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AdversaryDriver","canvas","state","renderer","scene","camera","controls","adversary","adversaryMaterial","timeStarted","geom","PlaneGeometry","textureBase","duotoneEffect","ambientLight","directionalLight","handleWindowResize","setSize","window","innerWidth","innerHeight","aspect","updateProjectionMatrix","animate","edge0","edge1","x","requestAnimationFrame","update","displacementScale","performance","now","MathUtils","clamp","growLength","needsUpdate","render","this","WebGLRenderer","setPixelRatio","devicePixelRatio","Scene","PerspectiveCamera","position","set","lookAt","addEventListener","AmbientLight","add","DirectionalLight","background","Color","loadDefaultImage","OrbitControls","autoRotate","setState","img","texture","Texture","onload","recreateAdversary","material","duoToneEnabled","map","color","remove","dispose","DuotoneEffect","displacementMap","createDisplacementMap","MeshStandardMaterial","side","DoubleSide","roughness","metalness","Mesh","TextureLoader","load","event","console","log","error","image","document","createElement","width","height","context","getContext","drawImage","imageData","getImageData","i","data","length","brightness","Math","floor","putImageData","CanvasTexture","vertices","vertex","imageDataIndex","mapLinear","y","z","scale","max","computeFlatVertexNormals","source","target","fsQuad","WebGLRenderTarget","DuoToneShaderMaterial","Pass","FullScreenQuad","setRenderTarget","glsl","literals","result","vertexShader","fragmentShader","uniforms","colorLight","value","duoToneLight","colorDark","duoToneDark","crush","enabled","ShaderMaterial","AdversaryRendering","driver","useRef","handleRef","React","useCallback","current","useEffect","setImage","ref","ImageDropzone","onGotImage","onDrop","files","rejected","forEach","file","reader","FileReader","onabort","onerror","src","readAsDataURL","useDropzone","maxFiles","getRootProps","getInputProps","isDragActive","className","App","useState","onUpdate","path","label","min","step","closed","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ebd7a34.chunk.js","sourcesContent":["import {\r\n  AmbientLight,\r\n  CanvasTexture,\r\n  Color,\r\n  DirectionalLight,\r\n  DoubleSide,\r\n  MathUtils,\r\n  Mesh,\r\n  MeshStandardMaterial,\r\n  PerspectiveCamera,\r\n  PlaneGeometry,\r\n  Scene,\r\n  ShaderMaterial,\r\n  Texture,\r\n  TextureLoader,\r\n  WebGLRenderer,\r\n  WebGLRenderTarget\r\n} from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { Pass } from \"three/examples/jsm/postprocessing/Pass\";\r\nimport { GUIState } from \"./App\";\r\nimport { smoothstep } from \"./smoothstep\";\r\n\r\nexport class AdversaryDriver {\r\n  public renderer: WebGLRenderer;\r\n  public scene: Scene;\r\n  public camera: PerspectiveCamera;\r\n  controls: OrbitControls;\r\n  adversary?: Mesh;\r\n  adversaryMaterial?: MeshStandardMaterial;\r\n  timeStarted = 0;\r\n  geom = new PlaneGeometry(200, 200, 512, 512);\r\n  textureBase?: Texture;\r\n  duotoneEffect!: DuotoneEffect;\r\n  ambientLight: AmbientLight;\r\n  directionalLight: DirectionalLight;\r\n\r\n  constructor(public canvas: HTMLCanvasElement, private state: GUIState) {\r\n    this.renderer = new WebGLRenderer({ canvas });\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n    this.scene = new Scene();\r\n\r\n    this.camera = new PerspectiveCamera(\r\n      75,\r\n      window.innerWidth / window.innerHeight,\r\n      1,\r\n      2000\r\n    );\r\n    this.camera.position.set(150, 0, 150);\r\n    this.camera.lookAt(0, 0, 0);\r\n\r\n    // also sets renderer initial size\r\n    this.handleWindowResize();\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n\r\n    this.ambientLight = new AmbientLight();\r\n    this.scene.add(this.ambientLight);\r\n    this.directionalLight = new DirectionalLight();\r\n    this.directionalLight.position.set(0, 0, 10);\r\n    this.scene.add(this.directionalLight);\r\n    this.scene.background = new Color(1, 1, 1);\r\n\r\n    // const mesh = new Mesh(\r\n    //   new TorusKnotBufferGeometry(100, 30),\r\n    //   new MeshStandardMaterial()\r\n    // );\r\n    // this.scene.add(mesh);\r\n    // this.scene.add(new AxesHelper(100));\r\n    this.loadDefaultImage();\r\n\r\n    this.controls = new OrbitControls(this.camera, this.canvas);\r\n    this.controls.autoRotate = true;\r\n\r\n    this.setState(state);\r\n    requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  setImage(img: HTMLImageElement) {\r\n    const texture = new Texture(img);\r\n    img.onload = function () {\r\n      texture.needsUpdate = true;\r\n    };\r\n    this.recreateAdversary(texture);\r\n  }\r\n\r\n  setState(state: GUIState) {\r\n    this.state = state;\r\n    this.duotoneEffect?.material.update(state);\r\n    if (this.adversaryMaterial != null) {\r\n      if (state.duoToneEnabled) {\r\n        this.adversaryMaterial.map = this.duotoneEffect.texture;\r\n      } else {\r\n        this.adversaryMaterial.map = this.textureBase!;\r\n      }\r\n      this.adversaryMaterial.needsUpdate = true;\r\n    }\r\n    this.ambientLight.color.set(state.ambientLight);\r\n    this.directionalLight.color.set(state.directionalLight);\r\n    (this.scene.background as Color).set(state.background);\r\n  }\r\n\r\n  private recreateAdversary(textureBase: Texture) {\r\n    if (this.adversary != null) {\r\n      this.scene.remove(this.adversary);\r\n      this.adversaryMaterial?.dispose();\r\n    }\r\n    this.textureBase = textureBase;\r\n    this.duotoneEffect = new DuotoneEffect(textureBase, this.state);\r\n    const displacementMap = this.createDisplacementMap(textureBase);\r\n    this.adversaryMaterial = new MeshStandardMaterial({\r\n      side: DoubleSide,\r\n      map: this.duotoneEffect.texture,\r\n      displacementMap,\r\n      displacementScale: 0,\r\n      // bumpMap: this.textureBase,\r\n      roughness: 1,\r\n      metalness: 0,\r\n    });\r\n    if (this.state.duoToneEnabled) {\r\n      this.adversaryMaterial.map = this.duotoneEffect.texture;\r\n    } else {\r\n      this.adversaryMaterial.map = this.textureBase!;\r\n    }\r\n    // const geom = this.generateDisplacementMappedGeometry(texture.image as HTMLImageElement);\r\n    this.adversary = new Mesh(\r\n      // geom,\r\n      this.geom,\r\n      this.adversaryMaterial\r\n    );\r\n    this.scene.add(this.adversary);\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.timeStarted = performance.now();\r\n  }\r\n\r\n  loadDefaultImage() {\r\n    new TextureLoader().load(\r\n      \"/2005-crowdstrike-adversary/adversaries/Buffalo.jpg\",\r\n      (texture) => {\r\n        this.recreateAdversary(texture);\r\n      },\r\n      (event) => console.log(event),\r\n      (event) => console.error(event)\r\n    );\r\n  }\r\n\r\n  handleWindowResize = () => {\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    this.camera.aspect = window.innerWidth / window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n  };\r\n\r\n  animate = () => {\r\n    requestAnimationFrame(this.animate);\r\n    this.controls.update();\r\n    if (this.adversaryMaterial != null) {\r\n      this.adversaryMaterial.displacementScale =\r\n        smoothstep(0, 5000, performance.now() - this.timeStarted) * this.state.growLength;\r\n    }\r\n    if (this.textureBase != null) {\r\n      this.textureBase.needsUpdate = true;\r\n    }\r\n    this.duotoneEffect?.render(this.renderer);\r\n    this.renderer.render(this.scene, this.camera);\r\n  };\r\n\r\n  private createDisplacementMap(texture: Texture) {\r\n    const image = texture.image as HTMLImageElement;\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = image.width / 3;\r\n    canvas.height = image.height / 3;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context) {\r\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n      const { width, height } = canvas;\r\n      const imageData = context.getImageData(0, 0, width, height);\r\n      for (let i = 0; i < imageData.data.length; i += 4) {\r\n        const r = imageData.data[i] / 255,\r\n          g = imageData.data[i + 1] / 255,\r\n          b = imageData.data[i + 2] / 255;\r\n        const brightness = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        imageData.data[i] = imageData.data[i + 1] = imageData.data[\r\n          i + 2\r\n        ] = Math.floor(brightness * 255);\r\n      }\r\n      context.putImageData(imageData, 0, 0);\r\n      const texture = new CanvasTexture(canvas);\r\n      return texture;\r\n    }\r\n  }\r\n\r\n  private generateDisplacementMappedGeometry(image: HTMLImageElement) {\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = image.width / 10;\r\n    canvas.height = image.height / 10;\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context) {\r\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n      const { width, height } = canvas;\r\n      const imageData = context.getImageData(0, 0, width, height);\r\n      // document.body.appendChild(canvas);\r\n      // PlaneGeometry adds 1 vertex row and column, but we don't have\r\n      // imageData there, so we must shrink PlaneGeometry to accomodate\r\n      const geom = new PlaneGeometry(\r\n        width - 1,\r\n        height - 1,\r\n        width - 1,\r\n        height - 1\r\n      );\r\n      for (const vertex of geom.vertices) {\r\n        // -0.5 to line it up perfectly with the grid\r\n        const x = MathUtils.mapLinear(\r\n          vertex.x - 0.5,\r\n          -width / 2,\r\n          width / 2,\r\n          0,\r\n          width\r\n        );\r\n        /// invert the y!\r\n        const y = MathUtils.mapLinear(\r\n          vertex.y - 0.5,\r\n          height / 2,\r\n          -height / 2,\r\n          0,\r\n          height\r\n        );\r\n        const imageDataIndex = (x + width * y) * 4;\r\n        const r = imageData.data[imageDataIndex] / 255,\r\n          g = imageData.data[imageDataIndex + 1] / 255,\r\n          b = imageData.data[imageDataIndex + 2] / 255;\r\n        const brightness = 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n        vertex.z = brightness * 20;\r\n      }\r\n\r\n      const scale = 200 / Math.max(width, height);\r\n      geom.scale(scale, scale, 1);\r\n      geom.computeFlatVertexNormals();\r\n      return geom;\r\n    }\r\n  }\r\n}\r\n\r\nclass DuotoneEffect {\r\n  public get texture() {\r\n    return this.target.texture;\r\n  }\r\n\r\n  target: WebGLRenderTarget;\r\n  private fsQuad: Pass.FullScreenQuad;\r\n  public readonly material: DuoToneShaderMaterial;\r\n\r\n  constructor(public source: Texture, state: GUIState) {\r\n    this.target = new WebGLRenderTarget(\r\n      source.image.width,\r\n      source.image.height\r\n    );\r\n    this.material = new DuoToneShaderMaterial(state);\r\n    this.fsQuad = new Pass.FullScreenQuad(this.material);\r\n  }\r\n\r\n  public render(renderer: WebGLRenderer) {\r\n    renderer.setRenderTarget(this.target);\r\n    this.fsQuad.render(renderer);\r\n    renderer.setRenderTarget(null);\r\n  }\r\n}\r\n\r\nfunction glsl(literals: TemplateStringsArray, ...placeholders: string[]) {\r\n  let result = \"\";\r\n  for (let i = 0; i < placeholders.length; i++) {\r\n    result += literals[i];\r\n    result += placeholders[i];\r\n  }\r\n\r\n  result += literals[literals.length - 1];\r\n  return result;\r\n}\r\n\r\nconst vertexShader = glsl`\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vUv = uv;\r\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n`;\r\n\r\nconst fragmentShader = glsl`\r\nuniform vec3 colorLight;\r\nuniform vec3 colorDark;\r\nuniform float crush;\r\nuniform bool enabled;\r\n\r\nuniform sampler2D tDiffuse;\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n  vec4 baseColor = texture2D( tDiffuse, vUv );\r\n\r\n  if (enabled) {\r\n    float grey = dot(baseColor.rgb, vec3(0.299, 0.587, 0.114));\r\n    grey = smoothstep(crush, 1.0 - crush, grey);\r\n\r\n    vec3 outColor = mix(colorDark, colorLight, grey);\r\n\r\n    gl_FragColor = vec4(outColor, 1.0);\r\n  } else {\r\n    gl_FragColor = baseColor;\r\n  }\r\n}\r\n`;\r\n\r\nclass DuoToneShaderMaterial extends ShaderMaterial {\r\n  constructor(state: GUIState) {\r\n    super({\r\n      uniforms: {\r\n        colorLight: { value: new Color(state.duoToneLight) },\r\n        colorDark: { value: new Color(state.duoToneDark) },\r\n        crush: { value: 0.0 },\r\n        enabled: { value: true }\r\n      },\r\n      vertexShader: vertexShader,\r\n      fragmentShader: fragmentShader,\r\n    });\r\n    this.needsUpdate = true;\r\n  }\r\n\r\n  update(state: GUIState) {\r\n    this.uniforms.colorLight.value.set(state.duoToneLight);\r\n    this.uniforms.colorDark.value.set(state.duoToneDark);\r\n    this.uniforms.enabled.value = state.duoToneEnabled;\r\n    this.needsUpdate = true;\r\n  }\r\n}\r\n","import { MathUtils } from \"three\";\r\n\r\n\r\nexport function smoothstep(edge0: number, edge1: number, x: number) {\r\n  // Scale, bias and saturate x to 0..1 range\r\n  x = MathUtils.clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\r\n  // Evaluate polynomial\r\n  return x * x * (3 - 2 * x);\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { AdversaryDriver } from \"./AdversaryDriver\";\r\nimport { GUIState } from \"./App\";\r\n\r\nexport const AdversaryRendering = ({ img, state }: { img: HTMLImageElement | undefined; state: GUIState }) => {\r\n  const driver = useRef<AdversaryDriver>();\r\n  const handleRef = React.useCallback((canvas: HTMLCanvasElement | null) => {\r\n    if (canvas != null) {\r\n      driver.current = new AdversaryDriver(canvas, state);\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(() => {\r\n    if (driver.current != null && img != null) {\r\n      driver.current.setImage(img);\r\n    }\r\n  }, [img]);\r\n  useEffect(() => {\r\n    if (driver.current != null) {\r\n      driver.current.setState(state);\r\n    }\r\n  }, [state]);\r\n  return <canvas ref={handleRef}></canvas>;\r\n};\r\n","import React, { useCallback } from \"react\";\r\nimport { DropEvent, FileRejection, useDropzone } from \"react-dropzone\";\r\n\r\nexport const ImageDropzone: React.FC<{\r\n  onGotImage: (img: HTMLImageElement) => void;\r\n}> = ({ onGotImage }) => {\r\n  const onDrop = useCallback(\r\n    (files: File[], rejected: FileRejection[], event: DropEvent) => {\r\n      files.forEach((file) => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onabort = () => console.log(\"file reading was aborted\");\r\n        reader.onerror = () => console.log(\"file reading has failed\");\r\n        reader.onload = () => {\r\n          const img = document.createElement(\"img\");\r\n          img.src = reader.result as string;\r\n          onGotImage(img);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      });\r\n    },\r\n    [onGotImage]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    maxFiles: 1,\r\n  });\r\n\r\n  return (\r\n    <div className=\"dropzone\" {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p>Drop the files here ...</p>\r\n      ) : (\r\n          <p>Drag 'n' drop some files here, or click to select files</p>\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport DatGui, {\n  DatBoolean,\n  DatColor,\n  DatFolder,\n  DatNumber\n} from \"react-dat-gui\";\nimport \"react-dat-gui/dist/index.css\";\nimport { AdversaryRendering } from \"./AdversaryRendering\";\nimport \"./App.css\";\nimport { ImageDropzone } from \"./ImageDropzone\";\n\nexport interface GUIState {\n  background: string;\n  ambientLight: string;\n  directionalLight: string;\n  duoToneLight: string;\n  duoToneDark: string;\n  duoToneEnabled: boolean;\n  growLength: number;\n}\n\nfunction App() {\n  const [img, setImage] = useState<HTMLImageElement>();\n  const [state, setState] = useState<GUIState>({\n    background: \"#ffffff\",\n    growLength: 50,\n    ambientLight: \"#535353\",\n    directionalLight: \"#d2d2d2\",\n    duoToneEnabled: true,\n    duoToneLight: \"#317671\",\n    duoToneDark: \"#772E49\",\n  });\n  return (\n    <div className=\"App\">\n      <AdversaryRendering img={img} state={state} />\n      <ImageDropzone onGotImage={setImage} />\n      <DatGui data={state} onUpdate={setState}>\n        <DatColor path=\"background\" label=\"Background\" />\n        <DatColor path=\"ambientLight\" label=\"Ambient Light\" />\n        <DatColor path=\"directionalLight\" label=\"Directional Light\" />\n        <DatNumber\n          path=\"growLength\"\n          label=\"Grow Length\"\n          min={0}\n          max={999}\n          step={10}\n        />\n        <DatFolder closed={false} title={\"Duo Tone\"}>\n          <DatBoolean path=\"duoToneEnabled\" label=\"Duo Tone Enabled?\" />\n          <DatColor path=\"duoToneLight\" label=\"Duo Tone Light\" />\n          <DatColor path=\"duoToneDark\" label=\"Duo Tone Dark\" />\n        </DatFolder>\n      </DatGui>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}